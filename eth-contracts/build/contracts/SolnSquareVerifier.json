{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "allegedOwner",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "pauseContract",
          "type": "bool"
        }
      ],
      "name": "setPause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mintToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"allegedOwner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pauseContract\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\\r\",\"params\":{\"operator\":\"operator address which you want to query the approval of\\r\",\"owner\":\"owner address which you want to query the approval of\\r\"},\"return\":\"bool whether the given operator is approved by the given owner\\r\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator\\r An operator is allowed to transfer all tokens of the sender on their behalf\\r\",\"params\":{\"approved\":\"representing the status of the approval to be set\\r\",\"to\":\"operator address to set the approval\\r\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\\r\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract\\r Reverts if the index is greater or equal to the total number of tokens\\r\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\\r\"},\"return\":\"uint256 token ID at the given index of the tokens list\\r\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\\r\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\\r\",\"owner\":\"address owning the tokens list to be accessed\\r\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\\r\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\\r\",\"return\":\"uint256 representing the total amount of tokens\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xa565bfc5832599b1704f54120dca9fbacbba6110bd62aeb45916dca703e4743a\",\"urls\":[\"bzzr://f0c3043c4e6005c0d8d0cb9d612b85e2e3c666e514e00cff196bc538affe6d07\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xc38194ed2d1a36907876f5836db0fd286125a56df657a2a28a3a5967b7d2b2a0\",\"urls\":[\"bzzr://80c5d5ebe0b16d0230061758ed8ae5141e2f3dd14cbe7175b4722a702ea7fdd7\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x4368024583950350b88b447a066ff1639c1fcfbd936bdcef33f1eb8c737ecb07\",\"urls\":[\"bzzr://9d8f2a88fe0837b71de39fae6b54ad22443c47cd8ebb84e651e2875364e62b87\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0x16807fbb362b3f9de71baf6a2da44307b215e7bdc58ed89386b64dcd05d03bfe\",\"urls\":[\"bzzr://5b03ee69683cd9154594b6f440f3b1845afdd46ef9ddf59da56e8d4dfae231bc\"]}},\"version\":1}",
  "bytecode": "0x6080604052604051620000129062000316565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b50601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200007d57600080fd5b506040518060400160405280601181526020017f5469746c65206f662050726f70657274790000000000000000000000000000008152506040518060400160405280600381526020017f54505200000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162004f62603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620001969190620003e4565b60405180910390a160008060146101000a81548160ff021916908315150217905550620001d06301ffc9a760e01b6200027460201b60201c565b620001e86380ac58cd60e01b6200027460201b60201c565b6200020063780e9d6360e01b6200027460201b60201c565b82600f90805190602001906200021892919062000324565b5081601090805190602001906200023192919062000324565b5080601190805190602001906200024a92919062000324565b5062000263635b5e139f60e01b6200027460201b60201c565b505050600060148190555062000435565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515620002aa57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61115f8062003e0383390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036757805160ff191683800117855562000398565b8280016001018555821562000398579182015b82811115620003975782518255916020019190600101906200037a565b5b509050620003a79190620003ab565b5090565b620003d091905b80821115620003cc576000816000905550600101620003b2565b5090565b90565b620003de8162000401565b82525050565b6000602082019050620003fb6000830184620003d3565b92915050565b60006200040e8262000415565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6139be80620004456000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636352211e116100de578063b88d4fde11610097578063ce606ee011610071578063ce606ee0146104b5578063d547cfb7146104d3578063e985e9c5146104f1578063f2fde38b146105215761018e565b8063b88d4fde1461044d578063bedb86fb14610469578063c87b56dd146104855761018e565b80636352211e1461037b5780636977bc84146103ab57806370a08231146103c757806379c65068146103f757806395d89b4114610413578063a22cb465146104315761018e565b806327dc297e1161014b57806338bbfa501161012557806338bbfa50146102e357806340c10f19146102ff57806342842e0e1461032f5780634f6ccce71461034b5761018e565b806327dc297e146102675780632f54bf6e146102835780632f745c59146102b35761018e565b806301ffc9a71461019357806306fdde03146101c3578063081812fc146101e1578063095ea7b31461021157806318160ddd1461022d57806323b872dd1461024b575b600080fd5b6101ad60048036036101a89190810190612f47565b61053d565b6040516101ba919061354c565b60405180910390f35b6101cb6105a5565b6040516101d89190613567565b60405180910390f35b6101fb60048036036101f69190810190612fd7565b610647565b60405161020891906134e5565b60405180910390f35b61022b60048036036102269190810190612de6565b610684565b005b61023561089a565b60405161024291906136d4565b60405180910390f35b61026560048036036102609190810190612ce0565b6108a7565b005b610281600480360361027c9190810190612e74565b6108cc565b005b61029d60048036036102989190810190612c7b565b61090f565b6040516102aa919061354c565b60405180910390f35b6102cd60048036036102c89190810190612de6565b610968565b6040516102da91906136d4565b60405180910390f35b6102fd60048036036102f89190810190612ec8565b6109df565b005b61031960048036036103149190810190612de6565b6109e4565b604051610326919061354c565b60405180910390f35b61034960048036036103449190810190612ce0565b610a94565b005b61036560048036036103609190810190612fd7565b610ab4565b60405161037291906136d4565b60405180910390f35b61039560048036036103909190810190612fd7565b610aec565b6040516103a291906134e5565b60405180910390f35b6103c560048036036103c09190810190612f99565b610b29565b005b6103e160048036036103dc9190810190612c7b565b610ce6565b6040516103ee91906136d4565b60405180910390f35b610411600480360361040c9190810190612de6565b610d36565b005b61041b610fb6565b6040516104289190613567565b60405180910390f35b61044b60048036036104469190810190612daa565b611058565b005b61046760048036036104629190810190612d2f565b611190565b005b610483600480360361047e9190810190612e22565b6111b8565b005b61049f600480360361049a9190810190612fd7565b6112d9565b6040516104ac9190613567565b60405180910390f35b6104bd6113a2565b6040516104ca91906134e5565b60405180910390f35b6104db6113cb565b6040516104e89190613567565b60405180910390f35b61050b60048036036105069190810190612ca4565b61146d565b604051610518919061354c565b60405180910390f35b61053b60048036036105369190810190612c7b565b611501565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f90613649565b60405180910390fd5b6107313361090f565b8061077557506107746002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163361146d565b5b15156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad906135c9565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6108b1338261169f565b15156108bc57600080fd5b6108c7838383611734565b505050565b61090b828260006040519080825280601f01601f1916602001820160405280156109055781602001600182028038833980820191505090505b506109df565b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061097383610ce6565b8210151561098057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156109cc57fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e906135a9565b60405180910390fd5b610a818383611758565b610a8a82611779565b6001905092915050565b610aaf83838360405180602001604052806000815250611190565b505050565b6000610abe61089a565b82101515610acb57600080fd5b600882815481101515610ada57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b601460008154809291906001019190505550610b43612752565b6040518060600160405280604051806040016040528086815260200185815250815260200160145481526020013373ffffffffffffffffffffffffffffffffffffffff1681525090506015819080600181540180825580915050906001820390600052602060002090600c02016000909192909190915060008201518160000160008201518160000160008201518160000160008201518160000155602082015181600101555050602082015181600201600082015181600001906002610c0b929190612790565b50602082015181600201906002610c23929190612790565b505050604082015181600601600082015181600001556020820151816001015550505050602082015181600801906002610c5e929190612790565b505050602082015181600a0155604082015181600b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f77cd7d3cd964bb1589f38a348f5e30078d5b599630eb9731a9ce218840f8e55260405160405180910390a1505050565b6000610d2f600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118a5565b9050919050565b600080905060008090505b601580549050811015610f63578373ffffffffffffffffffffffffffffffffffffffff16601582815481101515610d7457fe5b90600052602060002090600c0201600b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f565760166000601583815481101515610dd557fe5b90600052602060002090600c0201600a0154815260200190815260200160002060009054906101000a900460ff161515610f5557601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc601583815481101515610e5657fe5b90600052602060002090600c0201600001600001601584815481101515610e7957fe5b90600052602060002090600c02016000016008016040518363ffffffff1660e01b8152600401610eaa9291906136a9565b60206040518083038186803b158015610ec257600080fd5b505afa158015610ed6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610efa9190810190612e4b565b15610f5457600160166000601584815481101515610f1457fe5b90600052602060002090600c0201600a0154815260200190815260200160002060006101000a81548160ff02191690831515021790555060019150610f63565b5b5b8080600101915050610d41565b50801515610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d90613609565b60405180910390fd5b610fb083836109e4565b50505050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104e5780601f106110235761010080835404028352916020019161104e565b820191906000526020600020905b81548152906001019060200180831161103157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561109357600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611184919061354c565b60405180910390a35050565b61119b8484846108a7565b6111a7848484846118b3565b15156111b257600080fd5b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611249576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611240906135a9565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff16156112a9577f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a16112d6565b7fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a15b50565b60606112e4826119cc565b15156112ef57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113965780601f1061136b57610100808354040283529160200191611396565b820191906000526020600020905b81548152906001019060200180831161137957829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114635780601f1061143857610100808354040283529160200191611463565b820191906000526020600020905b81548152906001019060200180831161144657829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611592576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611589906135a9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fb90613689565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161169491906134e5565b60405180910390a150565b6000806116ab83610aec565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061171a57508373ffffffffffffffffffffffffffffffffffffffff1661170284610647565b73ffffffffffffffffffffffffffffffffffffffff16145b8061172b575061172a818561146d565b5b91505092915050565b61173f838383611a3e565b6117498382611c9c565b6117538282611e40565b505050565b6117628282611f07565b61176c8282611e40565b611775816120bd565b5050565b611782816119cc565b15156117c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ba90613669565b60405180910390fd5b60606117ce82612109565b9050606061187660118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561186b5780601f106118405761010080835404028352916020019161186b565b820191906000526020600020905b81548152906001019060200180831161184e57829003601f168201915b505050505083612243565b90508060126000858152602001908152602001600020908051906020019061189f9291906127d0565b50505050565b600081600001549050919050565b60006118d48473ffffffffffffffffffffffffffffffffffffffff16612287565b15156118e357600190506119c4565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016119249493929190613500565b602060405180830381600087803b15801561193e57600080fd5b505af1158015611952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119769190810190612f70565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ae1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad890613629565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4a906135e9565b60405180910390fd5b611b5c816122d2565b611ba3600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612392565b611bea600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123b5565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611cf46001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506123cb90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515611de7576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611d6557fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611dbf57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611e399190612850565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f70906135e9565b60405180910390fd5b611f82816119cc565b151515611fc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fbb90613589565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061205d600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123b5565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612151576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061223e565b600082905060005b60008214151561217f578080600101915050600a8281151561217757fe5b049150612159565b6060816040519080825280601f01601f1916602001820160405280156121b45781602001600182028038833980820191505090505b50905060006001830390505b60008614151561223657600a868115156121d657fe5b0660300160f81b8282806001900393508151811015156121f257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561222e57fe5b0495506121c0565b819450505050505b919050565b606061227f8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612415565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156122c957506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561238f5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6123aa600182600001546123cb90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061240d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506126f5565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156124715781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156124fc57888181518110151561249f57fe5b90602001015160f81c60f81b83838060010194508151811015156124bf57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612488565b600090505b875181101561257557878181518110151561251857fe5b90602001015160f81c60f81b838380600101945081518110151561253857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612501565b600090505b86518110156125ee57868181518110151561259157fe5b90602001015160f81c60f81b83838060010194508151811015156125b157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061257a565b600090505b855181101561266757858181518110151561260a57fe5b90602001015160f81c60f81b838380600101945081518110151561262a57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125f3565b600090505b84518110156126e057848181518110151561268357fe5b90602001015160f81c60f81b83838060010194508151811015156126a357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061266c565b82995050505050505050505095945050505050565b6000838311158290151561273f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127369190613567565b60405180910390fd5b5060008385039050809150509392505050565b60405180610180016040528061276661287c565b815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b82600281019282156127bf579160200282015b828111156127be5782518255916020019190600101906127a3565b5b5090506127cc91906128a3565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061281157805160ff191683800117855561283f565b8280016001018555821561283f579182015b8281111561283e578251825591602001919060010190612823565b5b50905061284c91906128a3565b5090565b8154818355818111156128775781836000526020600020918201910161287691906128a3565b5b505050565b6040518061014001604052806128906128c8565b815260200161289d6128fc565b81525090565b6128c591905b808211156128c15760008160009055506001016128a9565b5090565b90565b6040518061010001604052806128dc61291e565b81526020016128e9612938565b81526020016128f661291e565b81525090565b6040518060400160405280600290602082028038833980820191505090505090565b604051806040016040528060008152602001600081525090565b604051806080016040528061294b6128fc565b81526020016129586128fc565b81525090565b600061296a8235613870565b905092915050565b600082601f830112151561298557600080fd5b60026129986129938261371c565b6136ef565b915081838560208402820111156129ae57600080fd5b60005b838110156129de57816129c48882612c67565b8452602084019350602083019250506001810190506129b1565b5050505092915050565b600082601f83011215156129fb57600080fd5b6002612a0e612a098261373e565b6136ef565b91508183856020840282011115612a2457600080fd5b60005b83811015612a545781612a3a8882612c67565b845260208401935060208301925050600181019050612a27565b5050505092915050565b6000612a6a8235613882565b905092915050565b6000612a7e8251613882565b905092915050565b6000612a92823561388e565b905092915050565b6000612aa68235613898565b905092915050565b6000612aba8251613898565b905092915050565b600082601f8301121515612ad557600080fd5b8135612ae8612ae382613760565b6136ef565b91508082526020830160208301858383011115612b0457600080fd5b612b0f838284613924565b50505092915050565b600082601f8301121515612b2b57600080fd5b8135612b3e612b398261378c565b6136ef565b91508082526020830160208301858383011115612b5a57600080fd5b612b65838284613924565b50505092915050565b600060408284031215612b8057600080fd5b612b8a60406136ef565b90506000612b9a84828501612c67565b6000830152506020612bae84828501612c67565b60208301525092915050565b600060808284031215612bcc57600080fd5b612bd660406136ef565b90506000612be684828501612972565b6000830152506040612bfa84828501612972565b60208301525092915050565b60006101008284031215612c1957600080fd5b612c2360606136ef565b90506000612c3384828501612b6e565b6000830152506040612c4784828501612bba565b60208301525060c0612c5b84828501612b6e565b60408301525092915050565b6000612c7382356138e4565b905092915050565b600060208284031215612c8d57600080fd5b6000612c9b8482850161295e565b91505092915050565b60008060408385031215612cb757600080fd5b6000612cc58582860161295e565b9250506020612cd68582860161295e565b9150509250929050565b600080600060608486031215612cf557600080fd5b6000612d038682870161295e565b9350506020612d148682870161295e565b9250506040612d2586828701612c67565b9150509250925092565b60008060008060808587031215612d4557600080fd5b6000612d538782880161295e565b9450506020612d648782880161295e565b9350506040612d7587828801612c67565b925050606085013567ffffffffffffffff811115612d9257600080fd5b612d9e87828801612ac2565b91505092959194509250565b60008060408385031215612dbd57600080fd5b6000612dcb8582860161295e565b9250506020612ddc85828601612a5e565b9150509250929050565b60008060408385031215612df957600080fd5b6000612e078582860161295e565b9250506020612e1885828601612c67565b9150509250929050565b600060208284031215612e3457600080fd5b6000612e4284828501612a5e565b91505092915050565b600060208284031215612e5d57600080fd5b6000612e6b84828501612a72565b91505092915050565b60008060408385031215612e8757600080fd5b6000612e9585828601612a86565b925050602083013567ffffffffffffffff811115612eb257600080fd5b612ebe85828601612b18565b9150509250929050565b600080600060608486031215612edd57600080fd5b6000612eeb86828701612a86565b935050602084013567ffffffffffffffff811115612f0857600080fd5b612f1486828701612b18565b925050604084013567ffffffffffffffff811115612f3157600080fd5b612f3d86828701612ac2565b9150509250925092565b600060208284031215612f5957600080fd5b6000612f6784828501612a9a565b91505092915050565b600060208284031215612f8257600080fd5b6000612f9084828501612aae565b91505092915050565b6000806101408385031215612fad57600080fd5b6000612fbb85828601612c06565b925050610100612fcd858286016129e8565b9150509250929050565b600060208284031215612fe957600080fd5b6000612ff784828501612c67565b91505092915050565b600061300c83836134c7565b60208301905092915050565b613021816138ee565b82525050565b61303081613828565b82525050565b61303f816137c2565b61304981846137f0565b9250613054826137b8565b60005b828110156130825761306a858354613000565b9450613075826137e3565b9150600181019050613057565b5050505050565b613092816137c2565b61309c81846137fb565b92506130a7826137b8565b60005b828110156130d5576130bd858354613000565b94506130c8826137e3565b91506001810190506130aa565b5050505050565b6130e58161383a565b82525050565b60006130f6826137cd565b6131008185613806565b9350613110818560208601613933565b61311981613966565b840191505092915050565b600061312f826137d8565b6131398185613817565b9350613149818560208601613933565b61315281613966565b840191505092915050565b600061316a601b83613817565b91507f54686520746f6b656e20494420616c72656164792065786973747300000000006000830152602082019050919050565b60006131aa602083613817565b91507f43616c6c6572206973206e6f742074686520636f6e7472616374206f776e65726000830152602082019050919050565b60006131ea601c83613817565b91507f5468652073656e646572206973206e6f7420617574686f72697a6564000000006000830152602082019050919050565b600061322a601883613817565b91507f5468652061646472657373206973206e6f742076616c696400000000000000006000830152602082019050919050565b600061326a602883613817565b91507f546865206164647265737320686173206e6f2073656e6420612076616c69642060008301527f736f6c7574696f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006132d0601c83613817565b91507f5468652061646472657373206973206e6f7420746865206f776e6572000000006000830152602082019050919050565b6000613310602c83613817565b91507f54686520616464726573732063616e206e6f74206265207468652073616d652060008301527f6f6620746865206f776e657200000000000000000000000000000000000000006020830152604082019050919050565b6000613376601c83613817565b91507f54686520746f6b656e20494420646f6573206e6f7420657869737473000000006000830152602082019050919050565b60006133b6602983613817565b91507f5468652061646472657373206f6620746865206e6577206f776e65722069732060008301527f6e6f742076616c696400000000000000000000000000000000000000000000006020830152604082019050919050565b60408201600080830154905061342481613977565b61343160008601826134c7565b506001830154905061344281613977565b61344f60208601826134c7565b5050505050565b60808201600080830161346c6000860182613036565b506002830161347e6040860182613036565b5050505050565b6101008201600080830161349c600086018261340f565b50600283016134ae6040860182613456565b50600683016134c060c086018261340f565b5050505050565b6134d081613866565b82525050565b6134df81613866565b82525050565b60006020820190506134fa6000830184613027565b92915050565b60006080820190506135156000830187613018565b6135226020830186613027565b61352f60408301856134d6565b818103606083015261354181846130eb565b905095945050505050565b600060208201905061356160008301846130dc565b92915050565b600060208201905081810360008301526135818184613124565b905092915050565b600060208201905081810360008301526135a28161315d565b9050919050565b600060208201905081810360008301526135c28161319d565b9050919050565b600060208201905081810360008301526135e2816131dd565b9050919050565b600060208201905081810360008301526136028161321d565b9050919050565b600060208201905081810360008301526136228161325d565b9050919050565b60006020820190508181036000830152613642816132c3565b9050919050565b6000602082019050818103600083015261366281613303565b9050919050565b6000602082019050818103600083015261368281613369565b9050919050565b600060208201905081810360008301526136a2816133a9565b9050919050565b6000610140820190506136bf6000830185613485565b6136cd610100830184613089565b9392505050565b60006020820190506136e960008301846134d6565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561371257600080fd5b8060405250919050565b600067ffffffffffffffff82111561373357600080fd5b602082029050919050565b600067ffffffffffffffff82111561375557600080fd5b602082029050919050565b600067ffffffffffffffff82111561377757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156137a357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000600182019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061383382613846565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061387b826138c4565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138f982613900565b9050919050565b600061390b82613912565b9050919050565b600061391d82613846565b9050919050565b82818337600083830152505050565b60005b83811015613951578082015181840152602081019050613936565b83811115613960576000848401525b50505050565b6000601f19601f8301169050919050565b60008160001c905091905056fea265627a7a72305820d1328a681d6ea691e332fc3ab02d491b6efb9d8d778d68cc67232eb590c51df36c6578706572696d656e74616cf50037608060405234801561001057600080fd5b5061113f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806343cd76fc14610030575b600080fd5b61004a60048036036100459190810190611016565b610060565b6040516100579190611063565b60405180910390f35b6000606060026040519080825280602002602001820160405280156100945781602001602082028038833980820191505090505b50905060008090505b60028110156100e25783816002811015156100b457fe5b602002015182828151811015156100c757fe5b9060200190602002018181525050808060010191505061009d565b5060006100ef828661010b565b14156100ff576001915050610105565b60009150505b92915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050610139610cf3565b610141610293565b9050806080015151600186510114151561015a57600080fd5b610162610d3b565b6040518060400160405280600081526020016000815250905060008090505b86518110156102065783878281518110151561019957fe5b906020019060200201511015156101af57600080fd5b6101f7826101f28560800151600185018151811015156101cb57fe5b906020019060200201518a858151811015156101e357fe5b906020019060200201516106ed565b610787565b91508080600101915050610181565b5061022d818360800151600081518110151561021e57fe5b90602001906020020151610787565b90506102738560000151866020015161024584610842565b85604001516102578a60400151610842565b87606001516102698960000151610842565b89602001516108de565b1515610285576001935050505061028d565b600093505050505b92915050565b61029b610cf3565b60405180604001604052807f2a7787196865dcfc6d6bfe7541c4bc8bf039bdc76b928e7f2050db3ded08eaf481526020017f156e6f6475968ce461d17ef0021b204f3ce43154a82b3f8a1d56eb46afbbec7d8152508160000181905250604051806040016040528060405180604001604052807f1cb36ba1b77f067bfc4806cd33137bd007ad9b79f1fd6d7a0fe536c54d7ae95c81526020017f2e689973851d2023e68b5527ac381fc391870df2d4068458d4b55f15f212e261815250815260200160405180604001604052807f2d63b1e2d6dbc3a62894e453ac4c665eacfe6d332a0afd8cdddf24abb3b7b0e881526020017f145cfad3acd77578fbb095c90e4f3f08db0f5970da6cbbad3d40260d4840e3018152508152508160200181905250604051806040016040528060405180604001604052807f2b4f7f80aaeb1e8d0ab89c4c7248a20160da82e7a15556c3cc16033b76121a7881526020017f0edfe7aacbd02d06b83dd45cb88cd3a419a36373e86b0255f37f69ef365479bf815250815260200160405180604001604052807f2fa4c6314676a92523409b241037df6b9040c1ee0cd9612d1b78de4843cbabc481526020017f2ca9284b8f5da9f6cda701bb6b842d8c93b1462ef217492fd61633ed4718de0e8152508152508160400181905250604051806040016040528060405180604001604052807f2e9540c92bfe2fd148336b9da7950c1a0f87745db48e376fe1b8c5ce64d6042381526020017f2338e1aba8367b21284256e71d238171b08b3eaa617720892b979ac70ba28eec815250815260200160405180604001604052807f2fabf683507ff497225ff413ce5bf216fa6849ed87d44bd4743398952164369e81526020017f1c45ac7aae7d542cd13fabe5ad94c521ecb6de9887407c5cd55efcc8c869ab5b8152508152508160600181905250600360405190808252806020026020018201604052801561058257816020015b61056f610d55565b8152602001906001900390816105675790505b50816080018190525060405180604001604052807f03cd03eebc60d941214d2e726b0215352a33089370a163d1b43d8b91f899c41f81526020017f04645c8702e901acfd94a4120f66d2407aa5f49f4956cdf4eeff1db9ad645fd4815250816080015160008151811015156105f357fe5b9060200190602002018190525060405180604001604052807f08b173c0efb067e732242af9547d67a88bb4d6461f8ead8a376c0bbe5b58539c81526020017f0f148c33ed5c20fe86ed8aaf24f0bd3abe98563d15037e111a87db797d6f89258152508160800151600181518110151561066857fe5b9060200190602002018190525060405180604001604052807f117fe2f6d2bb0ca53e0e197a7a968d8380e6277056236c03eb766d7f05c87e1881526020017f12a5244cf8828d11ae4328417c52f86498eb6e69237b68e10b520dbc1b6be3bc815250816080015160028151811015156106dd57fe5b9060200190602002018190525090565b6106f5610d3b565b6106fd610d6f565b836000015181600060038110151561071157fe5b602002018181525050836020015181600160038110151561072e57fe5b6020020181815250508281600260038110151561074757fe5b602002018181525050600060608360808460076107d05a03fa9050806000811461077057610772565bfe5b5080151561077f57600080fd5b505092915050565b61078f610d3b565b610797610d91565b83600001518160006004811015156107ab57fe5b60200201818152505083602001518160016004811015156107c857fe5b60200201818152505082600001518160026004811015156107e557fe5b602002018181525050826020015181600360048110151561080257fe5b602002018181525050600060608360c08460066107d05a03fa9050806000811461082b5761082d565bfe5b5080151561083a57600080fd5b505092915050565b61084a610d3b565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610887575060008360200151145b156108ab5760405180604001604052806000815260200160008152509150506108d9565b6040518060400160405280846000015181526020018285602001518115156108cf57fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561091d57816020015b61090a610d55565b8152602001906001900390816109025790505b5090506060600460405190808252806020026020018201604052801561095d57816020015b61094a610db3565b8152602001906001900390816109425790505b5090508a82600081518110151561097057fe5b906020019060200201819052508882600181518110151561098d57fe5b90602001906020020181905250868260028151811015156109aa57fe5b90602001906020020181905250848260038151811015156109c757fe5b90602001906020020181905250898160008151811015156109e457fe5b9060200190602002018190525087816001815181101515610a0157fe5b9060200190602002018190525085816002815181101515610a1e57fe5b9060200190602002018190525083816003815181101515610a3b57fe5b90602001906020020181905250610a528282610a62565b9250505098975050505050505050565b600081518351141515610a7457600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015610ab35781602001602082028038833980820191505090505b50905060008090505b83811015610c91578681815181101515610ad257fe5b90602001906020020151600001518260006006840201815181101515610af457fe5b90602001906020020181815250508681815181101515610b1057fe5b90602001906020020151602001518260016006840201815181101515610b3257fe5b90602001906020020181815250508581815181101515610b4e57fe5b90602001906020020151600001516001600281101515610b6a57fe5b60200201518260026006840201815181101515610b8357fe5b90602001906020020181815250508581815181101515610b9f57fe5b90602001906020020151600001516000600281101515610bbb57fe5b60200201518260036006840201815181101515610bd457fe5b90602001906020020181815250508581815181101515610bf057fe5b90602001906020020151602001516001600281101515610c0c57fe5b60200201518260046006840201815181101515610c2557fe5b90602001906020020181815250508581815181101515610c4157fe5b90602001906020020151602001516000600281101515610c5d57fe5b60200201518260056006840201815181101515610c7657fe5b90602001906020020181815250508080600101915050610abc565b50610c9a610dd9565b6000602082602086026020860160086107d05a03fa90508060008114610cbf57610cc1565bfe5b50801515610cce57600080fd5b6000826000600181101515610cdf57fe5b602002015114159550505050505092915050565b604051806101e00160405280610d07610d55565b8152602001610d14610db3565b8152602001610d21610db3565b8152602001610d2e610db3565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060800160405280610dc6610dfb565b8152602001610dd3610dfb565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6040518060400160405280600290602082028038833980820191505090505090565b600082601f8301121515610e3057600080fd5b6002610e43610e3e826110ab565b61107e565b91508183856020840282011115610e5957600080fd5b60005b83811015610e895781610e6f8882611002565b845260208401935060208301925050600181019050610e5c565b5050505092915050565b600082601f8301121515610ea657600080fd5b6002610eb9610eb4826110cd565b61107e565b91508183856020840282011115610ecf57600080fd5b60005b83811015610eff5781610ee58882611002565b845260208401935060208301925050600181019050610ed2565b5050505092915050565b600060408284031215610f1b57600080fd5b610f25604061107e565b90506000610f3584828501611002565b6000830152506020610f4984828501611002565b60208301525092915050565b600060808284031215610f6757600080fd5b610f71604061107e565b90506000610f8184828501610e1d565b6000830152506040610f9584828501610e1d565b60208301525092915050565b60006101008284031215610fb457600080fd5b610fbe606061107e565b90506000610fce84828501610f09565b6000830152506040610fe284828501610f55565b60208301525060c0610ff684828501610f09565b60408301525092915050565b600061100e82356110fb565b905092915050565b600080610140838503121561102a57600080fd5b600061103885828601610fa1565b92505061010061104a85828601610e93565b9150509250929050565b61105d816110ef565b82525050565b60006020820190506110786000830184611054565b92915050565b6000604051905081810181811067ffffffffffffffff821117156110a157600080fd5b8060405250919050565b600067ffffffffffffffff8211156110c257600080fd5b602082029050919050565b600067ffffffffffffffff8211156110e457600080fd5b602082029050919050565b60008115159050919050565b600081905091905056fea265627a7a723058203b82e3a54b4185b0cd0b37c9299e0f9963d1d130c15a22e6c1c87741d04922276c6578706572696d656e74616cf5003768747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80636352211e116100de578063b88d4fde11610097578063ce606ee011610071578063ce606ee0146104b5578063d547cfb7146104d3578063e985e9c5146104f1578063f2fde38b146105215761018e565b8063b88d4fde1461044d578063bedb86fb14610469578063c87b56dd146104855761018e565b80636352211e1461037b5780636977bc84146103ab57806370a08231146103c757806379c65068146103f757806395d89b4114610413578063a22cb465146104315761018e565b806327dc297e1161014b57806338bbfa501161012557806338bbfa50146102e357806340c10f19146102ff57806342842e0e1461032f5780634f6ccce71461034b5761018e565b806327dc297e146102675780632f54bf6e146102835780632f745c59146102b35761018e565b806301ffc9a71461019357806306fdde03146101c3578063081812fc146101e1578063095ea7b31461021157806318160ddd1461022d57806323b872dd1461024b575b600080fd5b6101ad60048036036101a89190810190612f47565b61053d565b6040516101ba919061354c565b60405180910390f35b6101cb6105a5565b6040516101d89190613567565b60405180910390f35b6101fb60048036036101f69190810190612fd7565b610647565b60405161020891906134e5565b60405180910390f35b61022b60048036036102269190810190612de6565b610684565b005b61023561089a565b60405161024291906136d4565b60405180910390f35b61026560048036036102609190810190612ce0565b6108a7565b005b610281600480360361027c9190810190612e74565b6108cc565b005b61029d60048036036102989190810190612c7b565b61090f565b6040516102aa919061354c565b60405180910390f35b6102cd60048036036102c89190810190612de6565b610968565b6040516102da91906136d4565b60405180910390f35b6102fd60048036036102f89190810190612ec8565b6109df565b005b61031960048036036103149190810190612de6565b6109e4565b604051610326919061354c565b60405180910390f35b61034960048036036103449190810190612ce0565b610a94565b005b61036560048036036103609190810190612fd7565b610ab4565b60405161037291906136d4565b60405180910390f35b61039560048036036103909190810190612fd7565b610aec565b6040516103a291906134e5565b60405180910390f35b6103c560048036036103c09190810190612f99565b610b29565b005b6103e160048036036103dc9190810190612c7b565b610ce6565b6040516103ee91906136d4565b60405180910390f35b610411600480360361040c9190810190612de6565b610d36565b005b61041b610fb6565b6040516104289190613567565b60405180910390f35b61044b60048036036104469190810190612daa565b611058565b005b61046760048036036104629190810190612d2f565b611190565b005b610483600480360361047e9190810190612e22565b6111b8565b005b61049f600480360361049a9190810190612fd7565b6112d9565b6040516104ac9190613567565b60405180910390f35b6104bd6113a2565b6040516104ca91906134e5565b60405180910390f35b6104db6113cb565b6040516104e89190613567565b60405180910390f35b61050b60048036036105069190810190612ca4565b61146d565b604051610518919061354c565b60405180910390f35b61053b60048036036105369190810190612c7b565b611501565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f90613649565b60405180910390fd5b6107313361090f565b8061077557506107746002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163361146d565b5b15156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad906135c9565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6108b1338261169f565b15156108bc57600080fd5b6108c7838383611734565b505050565b61090b828260006040519080825280601f01601f1916602001820160405280156109055781602001600182028038833980820191505090505b506109df565b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061097383610ce6565b8210151561098057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156109cc57fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e906135a9565b60405180910390fd5b610a818383611758565b610a8a82611779565b6001905092915050565b610aaf83838360405180602001604052806000815250611190565b505050565b6000610abe61089a565b82101515610acb57600080fd5b600882815481101515610ada57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b601460008154809291906001019190505550610b43612752565b6040518060600160405280604051806040016040528086815260200185815250815260200160145481526020013373ffffffffffffffffffffffffffffffffffffffff1681525090506015819080600181540180825580915050906001820390600052602060002090600c02016000909192909190915060008201518160000160008201518160000160008201518160000160008201518160000155602082015181600101555050602082015181600201600082015181600001906002610c0b929190612790565b50602082015181600201906002610c23929190612790565b505050604082015181600601600082015181600001556020820151816001015550505050602082015181600801906002610c5e929190612790565b505050602082015181600a0155604082015181600b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f77cd7d3cd964bb1589f38a348f5e30078d5b599630eb9731a9ce218840f8e55260405160405180910390a1505050565b6000610d2f600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118a5565b9050919050565b600080905060008090505b601580549050811015610f63578373ffffffffffffffffffffffffffffffffffffffff16601582815481101515610d7457fe5b90600052602060002090600c0201600b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f565760166000601583815481101515610dd557fe5b90600052602060002090600c0201600a0154815260200190815260200160002060009054906101000a900460ff161515610f5557601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc601583815481101515610e5657fe5b90600052602060002090600c0201600001600001601584815481101515610e7957fe5b90600052602060002090600c02016000016008016040518363ffffffff1660e01b8152600401610eaa9291906136a9565b60206040518083038186803b158015610ec257600080fd5b505afa158015610ed6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610efa9190810190612e4b565b15610f5457600160166000601584815481101515610f1457fe5b90600052602060002090600c0201600a0154815260200190815260200160002060006101000a81548160ff02191690831515021790555060019150610f63565b5b5b8080600101915050610d41565b50801515610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d90613609565b60405180910390fd5b610fb083836109e4565b50505050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104e5780601f106110235761010080835404028352916020019161104e565b820191906000526020600020905b81548152906001019060200180831161103157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561109357600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611184919061354c565b60405180910390a35050565b61119b8484846108a7565b6111a7848484846118b3565b15156111b257600080fd5b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611249576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611240906135a9565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff16156112a9577f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a16112d6565b7fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a15b50565b60606112e4826119cc565b15156112ef57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113965780601f1061136b57610100808354040283529160200191611396565b820191906000526020600020905b81548152906001019060200180831161137957829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114635780601f1061143857610100808354040283529160200191611463565b820191906000526020600020905b81548152906001019060200180831161144657829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611592576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611589906135a9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fb90613689565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc6861636000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161169491906134e5565b60405180910390a150565b6000806116ab83610aec565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061171a57508373ffffffffffffffffffffffffffffffffffffffff1661170284610647565b73ffffffffffffffffffffffffffffffffffffffff16145b8061172b575061172a818561146d565b5b91505092915050565b61173f838383611a3e565b6117498382611c9c565b6117538282611e40565b505050565b6117628282611f07565b61176c8282611e40565b611775816120bd565b5050565b611782816119cc565b15156117c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ba90613669565b60405180910390fd5b60606117ce82612109565b9050606061187660118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561186b5780601f106118405761010080835404028352916020019161186b565b820191906000526020600020905b81548152906001019060200180831161184e57829003601f168201915b505050505083612243565b90508060126000858152602001908152602001600020908051906020019061189f9291906127d0565b50505050565b600081600001549050919050565b60006118d48473ffffffffffffffffffffffffffffffffffffffff16612287565b15156118e357600190506119c4565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016119249493929190613500565b602060405180830381600087803b15801561193e57600080fd5b505af1158015611952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119769190810190612f70565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ae1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad890613629565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4a906135e9565b60405180910390fd5b611b5c816122d2565b611ba3600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612392565b611bea600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123b5565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611cf46001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506123cb90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515611de7576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611d6557fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611dbf57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611e399190612850565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f70906135e9565b60405180910390fd5b611f82816119cc565b151515611fc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fbb90613589565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061205d600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206123b5565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415612151576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061223e565b600082905060005b60008214151561217f578080600101915050600a8281151561217757fe5b049150612159565b6060816040519080825280601f01601f1916602001820160405280156121b45781602001600182028038833980820191505090505b50905060006001830390505b60008614151561223657600a868115156121d657fe5b0660300160f81b8282806001900393508151811015156121f257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561222e57fe5b0495506121c0565b819450505050505b919050565b606061227f8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612415565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156122c957506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561238f5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6123aa600182600001546123cb90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061240d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506126f5565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156124715781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156124fc57888181518110151561249f57fe5b90602001015160f81c60f81b83838060010194508151811015156124bf57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612488565b600090505b875181101561257557878181518110151561251857fe5b90602001015160f81c60f81b838380600101945081518110151561253857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612501565b600090505b86518110156125ee57868181518110151561259157fe5b90602001015160f81c60f81b83838060010194508151811015156125b157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061257a565b600090505b855181101561266757858181518110151561260a57fe5b90602001015160f81c60f81b838380600101945081518110151561262a57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125f3565b600090505b84518110156126e057848181518110151561268357fe5b90602001015160f81c60f81b83838060010194508151811015156126a357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061266c565b82995050505050505050505095945050505050565b6000838311158290151561273f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127369190613567565b60405180910390fd5b5060008385039050809150509392505050565b60405180610180016040528061276661287c565b815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b82600281019282156127bf579160200282015b828111156127be5782518255916020019190600101906127a3565b5b5090506127cc91906128a3565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061281157805160ff191683800117855561283f565b8280016001018555821561283f579182015b8281111561283e578251825591602001919060010190612823565b5b50905061284c91906128a3565b5090565b8154818355818111156128775781836000526020600020918201910161287691906128a3565b5b505050565b6040518061014001604052806128906128c8565b815260200161289d6128fc565b81525090565b6128c591905b808211156128c15760008160009055506001016128a9565b5090565b90565b6040518061010001604052806128dc61291e565b81526020016128e9612938565b81526020016128f661291e565b81525090565b6040518060400160405280600290602082028038833980820191505090505090565b604051806040016040528060008152602001600081525090565b604051806080016040528061294b6128fc565b81526020016129586128fc565b81525090565b600061296a8235613870565b905092915050565b600082601f830112151561298557600080fd5b60026129986129938261371c565b6136ef565b915081838560208402820111156129ae57600080fd5b60005b838110156129de57816129c48882612c67565b8452602084019350602083019250506001810190506129b1565b5050505092915050565b600082601f83011215156129fb57600080fd5b6002612a0e612a098261373e565b6136ef565b91508183856020840282011115612a2457600080fd5b60005b83811015612a545781612a3a8882612c67565b845260208401935060208301925050600181019050612a27565b5050505092915050565b6000612a6a8235613882565b905092915050565b6000612a7e8251613882565b905092915050565b6000612a92823561388e565b905092915050565b6000612aa68235613898565b905092915050565b6000612aba8251613898565b905092915050565b600082601f8301121515612ad557600080fd5b8135612ae8612ae382613760565b6136ef565b91508082526020830160208301858383011115612b0457600080fd5b612b0f838284613924565b50505092915050565b600082601f8301121515612b2b57600080fd5b8135612b3e612b398261378c565b6136ef565b91508082526020830160208301858383011115612b5a57600080fd5b612b65838284613924565b50505092915050565b600060408284031215612b8057600080fd5b612b8a60406136ef565b90506000612b9a84828501612c67565b6000830152506020612bae84828501612c67565b60208301525092915050565b600060808284031215612bcc57600080fd5b612bd660406136ef565b90506000612be684828501612972565b6000830152506040612bfa84828501612972565b60208301525092915050565b60006101008284031215612c1957600080fd5b612c2360606136ef565b90506000612c3384828501612b6e565b6000830152506040612c4784828501612bba565b60208301525060c0612c5b84828501612b6e565b60408301525092915050565b6000612c7382356138e4565b905092915050565b600060208284031215612c8d57600080fd5b6000612c9b8482850161295e565b91505092915050565b60008060408385031215612cb757600080fd5b6000612cc58582860161295e565b9250506020612cd68582860161295e565b9150509250929050565b600080600060608486031215612cf557600080fd5b6000612d038682870161295e565b9350506020612d148682870161295e565b9250506040612d2586828701612c67565b9150509250925092565b60008060008060808587031215612d4557600080fd5b6000612d538782880161295e565b9450506020612d648782880161295e565b9350506040612d7587828801612c67565b925050606085013567ffffffffffffffff811115612d9257600080fd5b612d9e87828801612ac2565b91505092959194509250565b60008060408385031215612dbd57600080fd5b6000612dcb8582860161295e565b9250506020612ddc85828601612a5e565b9150509250929050565b60008060408385031215612df957600080fd5b6000612e078582860161295e565b9250506020612e1885828601612c67565b9150509250929050565b600060208284031215612e3457600080fd5b6000612e4284828501612a5e565b91505092915050565b600060208284031215612e5d57600080fd5b6000612e6b84828501612a72565b91505092915050565b60008060408385031215612e8757600080fd5b6000612e9585828601612a86565b925050602083013567ffffffffffffffff811115612eb257600080fd5b612ebe85828601612b18565b9150509250929050565b600080600060608486031215612edd57600080fd5b6000612eeb86828701612a86565b935050602084013567ffffffffffffffff811115612f0857600080fd5b612f1486828701612b18565b925050604084013567ffffffffffffffff811115612f3157600080fd5b612f3d86828701612ac2565b9150509250925092565b600060208284031215612f5957600080fd5b6000612f6784828501612a9a565b91505092915050565b600060208284031215612f8257600080fd5b6000612f9084828501612aae565b91505092915050565b6000806101408385031215612fad57600080fd5b6000612fbb85828601612c06565b925050610100612fcd858286016129e8565b9150509250929050565b600060208284031215612fe957600080fd5b6000612ff784828501612c67565b91505092915050565b600061300c83836134c7565b60208301905092915050565b613021816138ee565b82525050565b61303081613828565b82525050565b61303f816137c2565b61304981846137f0565b9250613054826137b8565b60005b828110156130825761306a858354613000565b9450613075826137e3565b9150600181019050613057565b5050505050565b613092816137c2565b61309c81846137fb565b92506130a7826137b8565b60005b828110156130d5576130bd858354613000565b94506130c8826137e3565b91506001810190506130aa565b5050505050565b6130e58161383a565b82525050565b60006130f6826137cd565b6131008185613806565b9350613110818560208601613933565b61311981613966565b840191505092915050565b600061312f826137d8565b6131398185613817565b9350613149818560208601613933565b61315281613966565b840191505092915050565b600061316a601b83613817565b91507f54686520746f6b656e20494420616c72656164792065786973747300000000006000830152602082019050919050565b60006131aa602083613817565b91507f43616c6c6572206973206e6f742074686520636f6e7472616374206f776e65726000830152602082019050919050565b60006131ea601c83613817565b91507f5468652073656e646572206973206e6f7420617574686f72697a6564000000006000830152602082019050919050565b600061322a601883613817565b91507f5468652061646472657373206973206e6f742076616c696400000000000000006000830152602082019050919050565b600061326a602883613817565b91507f546865206164647265737320686173206e6f2073656e6420612076616c69642060008301527f736f6c7574696f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b60006132d0601c83613817565b91507f5468652061646472657373206973206e6f7420746865206f776e6572000000006000830152602082019050919050565b6000613310602c83613817565b91507f54686520616464726573732063616e206e6f74206265207468652073616d652060008301527f6f6620746865206f776e657200000000000000000000000000000000000000006020830152604082019050919050565b6000613376601c83613817565b91507f54686520746f6b656e20494420646f6573206e6f7420657869737473000000006000830152602082019050919050565b60006133b6602983613817565b91507f5468652061646472657373206f6620746865206e6577206f776e65722069732060008301527f6e6f742076616c696400000000000000000000000000000000000000000000006020830152604082019050919050565b60408201600080830154905061342481613977565b61343160008601826134c7565b506001830154905061344281613977565b61344f60208601826134c7565b5050505050565b60808201600080830161346c6000860182613036565b506002830161347e6040860182613036565b5050505050565b6101008201600080830161349c600086018261340f565b50600283016134ae6040860182613456565b50600683016134c060c086018261340f565b5050505050565b6134d081613866565b82525050565b6134df81613866565b82525050565b60006020820190506134fa6000830184613027565b92915050565b60006080820190506135156000830187613018565b6135226020830186613027565b61352f60408301856134d6565b818103606083015261354181846130eb565b905095945050505050565b600060208201905061356160008301846130dc565b92915050565b600060208201905081810360008301526135818184613124565b905092915050565b600060208201905081810360008301526135a28161315d565b9050919050565b600060208201905081810360008301526135c28161319d565b9050919050565b600060208201905081810360008301526135e2816131dd565b9050919050565b600060208201905081810360008301526136028161321d565b9050919050565b600060208201905081810360008301526136228161325d565b9050919050565b60006020820190508181036000830152613642816132c3565b9050919050565b6000602082019050818103600083015261366281613303565b9050919050565b6000602082019050818103600083015261368281613369565b9050919050565b600060208201905081810360008301526136a2816133a9565b9050919050565b6000610140820190506136bf6000830185613485565b6136cd610100830184613089565b9392505050565b60006020820190506136e960008301846134d6565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561371257600080fd5b8060405250919050565b600067ffffffffffffffff82111561373357600080fd5b602082029050919050565b600067ffffffffffffffff82111561375557600080fd5b602082029050919050565b600067ffffffffffffffff82111561377757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156137a357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000600182019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061383382613846565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061387b826138c4565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138f982613900565b9050919050565b600061390b82613912565b9050919050565b600061391d82613846565b9050919050565b82818337600083830152505050565b60005b83811015613951578082015181840152602081019050613936565b83811115613960576000848401525b50505050565b6000601f19601f8301169050919050565b60008160001c905091905056fea265627a7a72305820d1328a681d6ea691e332fc3ab02d491b6efb9d8d778d68cc67232eb590c51df36c6578706572696d656e74616cf50037",
  "sourceMap": "236:2253:7:-;;;459:14;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;459:14:7;431:42;;;;;;;;;;;;;;;;;;;;1089:57;8:9:-1;5:2;;;30:1;27;20:12;5:2;1089:57:7;20740:292:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:10;675:6;;:19;;;;;;;;;;;;;;;;;;710:28;731:6;;;;;;;;;;;710:28;;;;;;;;;;;;;;;2406:5;2396:7;;:15;;;;;;;;;;;;;;;;;;3339:40;2920:10;3358:20;;3339:18;;;:40;;:::i;:::-;5539;5409:10;5558:20;;5539:18;;;:40;;:::i;:::-;13304:51;12897:10;13323:31;;13304:18;;;:51;;:::i;:::-;20894:4;20886:5;:12;;;;;;;;;;;;:::i;:::-;;20919:6;20909:7;:16;;;;;;;;;;;;:::i;:::-;;20952:12;20936:13;:28;;;;;;;;;;;;:::i;:::-;;20975:49;20542:10;20994:29;;20975:18;;;:49;;:::i;:::-;20740:292;;;1137:1:7;1126:8;:12;;;;236:2253;;3702:161:4;3793:10;3778:25;;:11;:25;;;;;3770:34;;;;;;;;3851:4;3815:20;:33;3836:11;3815:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3702:161;:::o;236:2253:7:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:120:-1:-;88:31;113:5;88:31;;;83:3;76:44;70:55;;;132:213;;250:2;239:9;235:18;227:26;;264:71;332:1;321:9;317:17;308:6;264:71;;;221:124;;;;;352:105;;421:31;446:5;421:31;;;410:42;;404:53;;;;464:128;;544:42;537:5;533:54;522:65;;516:76;;;;236:2253:7;;;;;;;",
  "deployedSourceMap": "236:2253:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;236:2253:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3483:135:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21125:87;;;:::i;:::-;;;;;;;;;;;;;;;;6828:170;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6140:680;;;;;;;;;;;;;;;;:::i;:::-;;14087:96;;;:::i;:::-;;;;;;;;;;;;;;;;7999:184;;;;;;;;;;;;;;;;:::i;:::-;;15167:124:6;;;;;;;;;;;;;;;;:::i;:::-;;1533:119:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;13744:185;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;15299:169:6;;;;;;;;;;;;;;;;:::i;:::-;;23155:184:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8191:134;;;;;;;;;;;;;;;;:::i;:::-;;14528:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5895:168;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1238:292:7;;;;;;;;;;;;;;;;:::i;:::-;;5595::4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1762:724:7;;;;;;;;;;;;;;;;:::i;:::-;;21220:91:4;;;:::i;:::-;;;;;;;;;;;;;;;;7298:217;;;;;;;;;;;;;;;;:::i;:::-;;8333:214;;;;;;;;;;;;;;;;:::i;:::-;;2647:196;;;;;;;;;;;;;;;;:::i;:::-;;21430:152;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1660:92;;;:::i;:::-;;;;;;;;;;;;;;;;21319:103;;;:::i;:::-;;;;;;;;;;;;;;;;7844:147;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1150:375;;;;;;;;;;;;;;;;:::i;:::-;;3483:135;3553:4;3577:20;:33;3598:11;3577:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3570:40;;3483:135;;;:::o;21125:87::-;21161:13;21199:5;21192:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21125:87;:::o;6828:170::-;6887:7;6966:15;:24;6982:7;6966:24;;;;;;;;;;;;;;;;;;;;;6959:31;;6828:170;;;:::o;6140:680::-;6327:2;6303:26;;:11;:20;6315:7;6303:20;;;;;;;;;;;;;;;;;;;;;:26;;;;6295:83;;;;;;;;;;;;;;;;;;;;;;;;6507:19;6515:10;6507:7;:19::i;:::-;:73;;;;6530:50;6547:11;:20;6559:7;6547:20;;;;;;;;;;;;;;;;;;;;;6569:10;6530:16;:50::i;:::-;6507:73;6499:114;;;;;;;;;;;;;;;;;;;;;;;;6709:2;6682:15;:24;6698:7;6682:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6804:7;6800:2;6769:43;;6778:11;:20;6790:7;6778:20;;;;;;;;;;;;;;;;;;;;;6769:43;;;;;;;;;;;;6140:680;;:::o;14087:96::-;14131:7;14158:10;:17;;;;14151:24;;14087:96;:::o;7999:184::-;8090:39;8109:10;8121:7;8090:18;:39::i;:::-;8082:48;;;;;;;;8143:32;8157:4;8163:2;8167:7;8143:13;:32::i;:::-;7999:184;;;:::o;15167:124:6:-;15243:40;15254:5;15261:7;15280:1;15270:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15270:12:6;;;;15243:10;:40::i;:::-;15167:124;;:::o;1533:119:4:-;1593:4;1632:12;1622:22;;:6;;;;;;;;;;;:22;;;1615:29;;1533:119;;;:::o;13744:185::-;13824:7;13860:16;13870:5;13860:9;:16::i;:::-;13852:5;:24;13844:33;;;;;;;;13895:12;:19;13908:5;13895:19;;;;;;;;;;;;;;;13915:5;13895:26;;;;;;;;;;;;;;;;;;13888:33;;13744:185;;;;:::o;15299:169:6:-;;;;:::o;23155:184:4:-;23224:4;919:6;;;;;;;;;;;905:20;;:10;:20;;;897:65;;;;;;;;;;;;;;;;;;;;;;;;23246:24;23258:2;23262:7;23246:11;:24::i;:::-;23281:27;23300:7;23281:18;:27::i;:::-;23326:4;23319:12;;23155:184;;;;:::o;8191:134::-;8278:39;8295:4;8301:2;8305:7;8278:39;;;;;;;;;;;;:16;:39::i;:::-;8191:134;;;:::o;14528:151::-;14586:7;14622:13;:11;:13::i;:::-;14614:5;:21;14606:30;;;;;;;;14654:10;14665:5;14654:17;;;;;;;;;;;;;;;;;;14647:24;;14528:151;;;:::o;5895:168::-;5950:7;6035:11;:20;6047:7;6035:20;;;;;;;;;;;;;;;;;;;;;6028:27;;5895:168;;;:::o;1238:292:7:-;1333:8;;:10;;;;;;;;;;;;;1354:31;;:::i;:::-;1388:58;;;;;;;;1401:22;;;;;;;;1410:5;1401:22;;;;1417:5;1401:22;;;1388:58;;;;1425:8;;1388:58;;;;1435:10;1388:58;;;;;1354:92;;1457:16;1479:11;1457:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1457:34:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1507:15;;;;;;;;;;1238:292;;;:::o;5595::4:-;5650:7;5845:34;:17;:24;5863:5;5845:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5838:41;;5595:292;;;:::o;1762:724:7:-;1833:15;1851:5;1833:23;;1873:6;1882:1;1873:10;;1869:502;1889:16;:23;;;;1885:1;:27;1869:502;;;1966:2;1937:31;;:16;1954:1;1937:19;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:31;;;1934:426;;;1993:9;:36;2003:16;2020:1;2003:19;;;;;;;;;;;;;;;;;;;;:25;;;1993:36;;;;;;;;;;;;;;;;;;;;;1992:37;1989:356;;;2057:16;;;;;;;;;;;:25;;;2083:16;2100:1;2083:19;;;;;;;;;;;;;;;;;;;;:28;;:34;;2119:16;2136:1;2119:19;;;;;;;;;;;;;;;;;;;;:28;;:34;;2057:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2057:97:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2057:97:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2057:97:7;;;;;;;;;2054:272;;;2222:4;2183:9;:36;2193:16;2210:1;2193:19;;;;;;;;;;;;;;;;;;;;:25;;;2183:36;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;2266:4;2253:17;;2297:5;;2054:272;1989:356;1934:426;1914:3;;;;;;;1869:502;;;;2389:10;2381:63;;;;;;;;;;;;;;;;;;;;;;;;2455:23;2466:2;2470:7;2455:10;:23::i;:::-;;1762:724;;;:::o;21220:91:4:-;21258:13;21296:7;21289:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21220:91;:::o;7298:217::-;7384:10;7378:16;;:2;:16;;;;7370:25;;;;;;;;7443:8;7406:18;:30;7425:10;7406:30;;;;;;;;;;;;;;;:34;7437:2;7406:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7494:2;7467:40;;7482:10;7467:40;;;7498:8;7467:40;;;;;;;;;;;;;;;7298:217;;:::o;8333:214::-;8440:31;8453:4;8459:2;8463:7;8440:12;:31::i;:::-;8490:48;8513:4;8519:2;8523:7;8532:5;8490:22;:48::i;:::-;8482:57;;;;;;;;8333:214;;;;:::o;2647:196::-;919:6;;;;;;;;;;;905:20;;:10;:20;;;897:65;;;;;;;;;;;;;;;;;;;;;;;;2729:13;2719:7;;:23;;;;;;;;;;;;;;;;;;2756:7;;;;;;;;;;;2753:82;;;2783:8;;;;;;;;;;2753:82;;;2825:10;;;;;;;;;;2753:82;2647:196;:::o;21430:152::-;21486:13;21520:16;21528:7;21520;:16::i;:::-;21512:25;;;;;;;;21555:10;:19;21566:7;21555:19;;;;;;;;;;;21548:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21430:152;;;:::o;1660:92::-;1706:7;1738:6;;;;;;;;;;;1731:13;;1660:92;:::o;21319:103::-;21363:13;21401;21394:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21319:103;:::o;7844:147::-;7924:4;7948:18;:25;7967:5;7948:25;;;;;;;;;;;;;;;:35;7974:8;7948:35;;;;;;;;;;;;;;;;;;;;;;;;;7941:42;;7844:147;;;;:::o;1150:375::-;919:6;;;;;;;;;;;905:20;;:10;:20;;;897:65;;;;;;;;;;;;;;;;;;;;;;;;1397:1;1377:22;;:8;:22;;;;1369:76;;;;;;;;;;;;;;;;;;;;;;;;1465:8;1456:6;;:17;;;;;;;;;;;;;;;;;;1489:28;1510:6;;;;;;;;;;;1489:28;;;;;;;;;;;;;;;1150:375;:::o;9272:249::-;9357:4;9374:13;9390:16;9398:7;9390;:16::i;:::-;9374:32;;9436:5;9425:16;;:7;:16;;;:51;;;;9469:7;9445:31;;:20;9457:7;9445:11;:20::i;:::-;:31;;;9425:51;:87;;;;9480:32;9497:5;9504:7;9480:16;:32::i;:::-;9425:87;9417:96;;;9272:249;;;;:::o;15063:245::-;15149:38;15169:4;15175:2;15179:7;15149:19;:38::i;:::-;15200:47;15233:4;15239:7;15200:32;:47::i;:::-;15260:40;15288:2;15292:7;15260:27;:40::i;:::-;15063:245;;;:::o;15571:202::-;15635:24;15647:2;15651:7;15635:11;:24::i;:::-;15672:40;15700:2;15704:7;15672:27;:40::i;:::-;15725;15757:7;15725:31;:40::i;:::-;15571:202;;:::o;22066:301::-;22138:16;22146:7;22138;:16::i;:::-;22130:57;;;;;;;;;;;;;;;;;;;;;;;;22198:25;22226:17;22235:7;22226:8;:17::i;:::-;22198:45;;22254:23;22280:37;22290:13;22280:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22305:11;22280:9;:37::i;:::-;22254:63;;22350:9;22328:10;:19;22339:7;22328:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;22066:301;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11710:356:4:-;11832:4;11859:15;:2;:13;;;:15::i;:::-;11858:16;11854:60;;;11898:4;11891:11;;;;11854:60;11926:13;11958:2;11942:36;;;11979:10;11991:4;11997:7;12006:5;11942:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11942:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11942:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11942:70:4;;;;;;;;;11926:86;;4525:10;12041:16;;12031:26;;;:6;:26;;;;12023:35;;;11710:356;;;;;;;:::o;8748:155::-;8805:4;8822:13;8838:11;:20;8850:7;8838:20;;;;;;;;;;;;;;;;;;;;;8822:36;;8893:1;8876:19;;:5;:19;;;;8869:26;;;8748:155;;;:::o;10422:749::-;10616:4;10592:28;;:11;:20;10604:7;10592:20;;;;;;;;;;;;;;;;;;;;;:28;;;10584:69;;;;;;;;;;;;;;;;;;;;;;;;10760:1;10746:16;;:2;:16;;;;10738:53;;;;;;;;;;;;;;;;;;;;;;;;10848:23;10863:7;10848:14;:23::i;:::-;10963:35;:17;:23;10981:4;10963:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11009:33;:17;:21;11027:2;11009:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11076:2;11053:11;:20;11065:7;11053:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11155:7;11151:2;11136:27;;11145:4;11136:27;;;;;;;;;;;;10422:749;;;:::o;17587:1148::-;17853:22;17878:32;17908:1;17878:12;:18;17891:4;17878:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17853:57;;17921:18;17942:17;:26;17960:7;17942:26;;;;;;;;;;;;17921:47;;18089:14;18075:10;:28;;18071:328;;;18120:19;18142:12;:18;18155:4;18142:18;;;;;;;;;;;;;;;18161:14;18142:34;;;;;;;;;;;;;;;;;;18120:56;;18226:11;18193:12;:18;18206:4;18193:18;;;;;;;;;;;;;;;18212:10;18193:30;;;;;;;;;;;;;;;;;:44;;;;18343:10;18310:17;:30;18328:11;18310:30;;;;;;;;;;;:43;;;;18071:328;;18488:12;:18;18501:4;18488:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17587:1148;;;;:::o;16411:186::-;16525:12;:16;16538:2;16525:16;;;;;;;;;;;;;;;:23;;;;16496:17;:26;16514:7;16496:26;;;;;;;;;;;:52;;;;16559:12;:16;16572:2;16559:16;;;;;;;;;;;;;;;16581:7;16559:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16559:30:4;;;;;;;;;;;;;;;;;;;;;;16411:186;;:::o;9682:537::-;9857:1;9843:16;;:2;:16;;;;9835:53;;;;;;;;;;;;;;;;;;;;;;;;9908:16;9916:7;9908;:16::i;:::-;9907:17;9899:57;;;;;;;;;;;;;;;;;;;;;;;;10074:2;10051:11;:20;10063:7;10051:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10087:33;:17;:21;10105:2;10087:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10203:7;10199:2;10178:33;;10195:1;10178:33;;;;;;;;;;;;9682:537;;:::o;16798:164::-;16902:10;:17;;;;16875:15;:24;16891:7;16875:24;;;;;;;;;;;:44;;;;16930:10;16946:7;16930:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16930:24:4;;;;;;;;;;;;;;;;;;;;;;16798:164;:::o;44306:482:6:-;44356:27;44406:1;44400:2;:7;44396:50;;;44424:10;;;;;;;;;;;;;;;;;;;;;44396:50;44456:6;44465:2;44456:11;;44478:8;44497:69;44509:1;44504;:6;;44497:69;;;44527:5;;;;;;;44552:2;44547:7;;;;;;;;;;;44497:69;;;44576:17;44606:3;44596:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;44596:14:6;;;;44576:34;;44621:6;44636:1;44630:3;:7;44621:16;;44648:103;44661:1;44655:2;:7;;44648:103;;;44712:2;44707;:7;;;;;;;;44702:2;:12;44691:25;;44679:4;44684:3;;;;;;;44679:9;;;;;;;;;;;;;;:37;;;;;;;;;;;44737:2;44731:8;;;;;;;;;;;44648:103;;;44775:4;44761:19;;;;;;44306:482;;;;:::o;40649:168::-;40727:33;40780:29;40790:2;40794;40780:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;40773:36;;40649:168;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;12150:175:4:-;12250:1;12214:38;;:15;:24;12230:7;12214:24;;;;;;;;;;;;;;;;;;;;;:38;;;;12210:108;;;12304:1;12269:15;:24;12285:7;12269:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12210:108;12150:175;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;41231:1046:6:-;41363:33;41409:16;41434:2;41409:28;;41448:16;41473:2;41448:28;;41487:16;41512:2;41487:28;;41526:16;41551:2;41526:28;;41565:16;41590:2;41565:28;;41604:19;41689:3;:10;41676:3;:10;41663:3;:10;41650:3;:10;41637:3;:10;:23;:36;:49;:62;41626:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;41626:74:6;;;;41604:96;;41711:19;41739:5;41711:34;;41756:6;41765:1;41756:10;;41777:6;41786:1;41777:10;;41807:1;41803:5;;41798:80;41814:3;:10;41810:1;:14;41798:80;;;41860:3;41864:1;41860:6;;;;;;;;;;;;;;;;;;;41846;41853:3;;;;;;41846:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41826:3;;;;;;;41798:80;;;41897:1;41893:5;;41888:80;41904:3;:10;41900:1;:14;41888:80;;;41950:3;41954:1;41950:6;;;;;;;;;;;;;;;;;;;41936;41943:3;;;;;;41936:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41916:3;;;;;;;41888:80;;;41987:1;41983:5;;41978:80;41994:3;:10;41990:1;:14;41978:80;;;42040:3;42044:1;42040:6;;;;;;;;;;;;;;;;;;;42026;42033:3;;;;;;42026:11;;;;;;;;;;;;;;:20;;;;;;;;;;;42006:3;;;;;;;41978:80;;;42077:1;42073:5;;42068:80;42084:3;:10;42080:1;:14;42068:80;;;42130:3;42134:1;42130:6;;;;;;;;;;;;;;;;;;;42116;42123:3;;;;;;42116:11;;;;;;;;;;;;;;:20;;;;;;;;;;;42096:3;;;;;;;42068:80;;;42167:1;42163:5;;42158:80;42174:3;:10;42170:1;:14;42158:80;;;42220:3;42224:1;42220:6;;;;;;;;;;;;;;;;;;;42206;42213:3;;;;;;42206:11;;;;;;;;;;;;;;:20;;;;;;;;;;;42186:3;;;;;;;42158:80;;;42262:6;42248:21;;;;;;;;;;;41231:1046;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;236:2253:7:-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;236:2253:7;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;149:607;;260:3;253:4;245:6;241:17;237:27;230:35;227:2;;;278:1;275;268:12;227:2;302:3;320:74;335:58;386:6;335:58;;;320:74;;;311:83;;411:5;470:6;517:3;509:4;501:6;497:17;492:3;488:27;485:36;482:2;;;534:1;531;524:12;482:2;559:1;544:206;569:6;566:1;563:13;544:206;;;627:3;649:37;682:3;670:10;649:37;;;644:3;637:50;710:4;705:3;701:14;694:21;;738:4;733:3;729:14;722:21;;601:149;591:1;588;584:9;579:14;;544:206;;;548:14;220:536;;;;;;;;783:615;;898:3;891:4;883:6;879:17;875:27;868:35;865:2;;;916:1;913;906:12;865:2;940:3;958:78;973:62;1028:6;973:62;;;958:78;;;949:87;;1053:5;1112:6;1159:3;1151:4;1143:6;1139:17;1134:3;1130:27;1127:36;1124:2;;;1176:1;1173;1166:12;1124:2;1201:1;1186:206;1211:6;1208:1;1205:13;1186:206;;;1269:3;1291:37;1324:3;1312:10;1291:37;;;1286:3;1279:50;1352:4;1347:3;1343:14;1336:21;;1380:4;1375:3;1371:14;1364:21;;1243:149;1233:1;1230;1226:9;1221:14;;1186:206;;;1190:14;858:540;;;;;;;;1406:112;;1470:43;1505:6;1492:20;1470:43;;;1461:52;;1455:63;;;;;1525:116;;1600:36;1628:6;1622:13;1600:36;;;1591:45;;1585:56;;;;;1648:118;;1715:46;1753:6;1740:20;1715:46;;;1706:55;;1700:66;;;;;1773:116;;1839:45;1876:6;1863:20;1839:45;;;1830:54;;1824:65;;;;;1896:120;;1973:38;2003:6;1997:13;1973:38;;;1964:47;;1958:58;;;;;2024:440;;2125:3;2118:4;2110:6;2106:17;2102:27;2095:35;2092:2;;;2143:1;2140;2133:12;2092:2;2180:6;2167:20;2202:64;2217:48;2258:6;2217:48;;;2202:64;;;2193:73;;2286:6;2279:5;2272:21;2322:4;2314:6;2310:17;2355:4;2348:5;2344:16;2390:3;2381:6;2376:3;2372:16;2369:25;2366:2;;;2407:1;2404;2397:12;2366:2;2417:41;2451:6;2446:3;2441;2417:41;;;2085:379;;;;;;;;2473:442;;2575:3;2568:4;2560:6;2556:17;2552:27;2545:35;2542:2;;;2593:1;2590;2583:12;2542:2;2630:6;2617:20;2652:65;2667:49;2709:6;2667:49;;;2652:65;;;2643:74;;2737:6;2730:5;2723:21;2773:4;2765:6;2761:17;2806:4;2799:5;2795:16;2841:3;2832:6;2827:3;2823:16;2820:25;2817:2;;;2858:1;2855;2848:12;2817:2;2868:41;2902:6;2897:3;2892;2868:41;;;2535:380;;;;;;;;2952:456;;3062:4;3050:9;3045:3;3041:19;3037:30;3034:2;;;3080:1;3077;3070:12;3034:2;3098:20;3113:4;3098:20;;;3089:29;;3165:1;3196:49;3241:3;3232:6;3221:9;3217:22;3196:49;;;3190:3;3183:5;3179:15;3172:74;3128:129;3304:2;3337:49;3382:3;3373:6;3362:9;3358:22;3337:49;;;3330:4;3323:5;3319:16;3312:75;3267:131;3028:380;;;;;3444:494;;3554:4;3542:9;3537:3;3533:19;3529:30;3526:2;;;3572:1;3569;3562:12;3526:2;3590:20;3605:4;3590:20;;;3581:29;;3657:1;3688:68;3752:3;3743:6;3732:9;3728:22;3688:68;;;3682:3;3675:5;3671:15;3664:93;3620:148;3815:2;3848:68;3912:3;3903:6;3892:9;3888:22;3848:68;;;3841:4;3834:5;3830:16;3823:94;3778:150;3520:418;;;;;3973:664;;4085:5;4073:9;4068:3;4064:19;4060:31;4057:2;;;4104:1;4101;4094:12;4057:2;4122:20;4137:4;4122:20;;;4113:29;;4189:1;4220:70;4286:3;4277:6;4266:9;4262:22;4220:70;;;4214:3;4207:5;4203:15;4196:95;4152:150;4349:2;4382:70;4448:3;4439:6;4428:9;4424:22;4382:70;;;4375:4;4368:5;4364:16;4357:96;4312:152;4511:3;4545:70;4611:3;4602:6;4591:9;4587:22;4545:70;;;4538:4;4531:5;4527:16;4520:96;4474:153;4051:586;;;;;4644:118;;4711:46;4749:6;4736:20;4711:46;;;4702:55;;4696:66;;;;;4769:241;;4873:2;4861:9;4852:7;4848:23;4844:32;4841:2;;;4889:1;4886;4879:12;4841:2;4924:1;4941:53;4986:7;4977:6;4966:9;4962:22;4941:53;;;4931:63;;4903:97;4835:175;;;;;5017:366;;;5138:2;5126:9;5117:7;5113:23;5109:32;5106:2;;;5154:1;5151;5144:12;5106:2;5189:1;5206:53;5251:7;5242:6;5231:9;5227:22;5206:53;;;5196:63;;5168:97;5296:2;5314:53;5359:7;5350:6;5339:9;5335:22;5314:53;;;5304:63;;5275:98;5100:283;;;;;;5390:491;;;;5528:2;5516:9;5507:7;5503:23;5499:32;5496:2;;;5544:1;5541;5534:12;5496:2;5579:1;5596:53;5641:7;5632:6;5621:9;5617:22;5596:53;;;5586:63;;5558:97;5686:2;5704:53;5749:7;5740:6;5729:9;5725:22;5704:53;;;5694:63;;5665:98;5794:2;5812:53;5857:7;5848:6;5837:9;5833:22;5812:53;;;5802:63;;5773:98;5490:391;;;;;;5888:721;;;;;6052:3;6040:9;6031:7;6027:23;6023:33;6020:2;;;6069:1;6066;6059:12;6020:2;6104:1;6121:53;6166:7;6157:6;6146:9;6142:22;6121:53;;;6111:63;;6083:97;6211:2;6229:53;6274:7;6265:6;6254:9;6250:22;6229:53;;;6219:63;;6190:98;6319:2;6337:53;6382:7;6373:6;6362:9;6358:22;6337:53;;;6327:63;;6298:98;6455:2;6444:9;6440:18;6427:32;6479:18;6471:6;6468:30;6465:2;;;6511:1;6508;6501:12;6465:2;6531:62;6585:7;6576:6;6565:9;6561:22;6531:62;;;6521:72;;6406:193;6014:595;;;;;;;;6616:360;;;6734:2;6722:9;6713:7;6709:23;6705:32;6702:2;;;6750:1;6747;6740:12;6702:2;6785:1;6802:53;6847:7;6838:6;6827:9;6823:22;6802:53;;;6792:63;;6764:97;6892:2;6910:50;6952:7;6943:6;6932:9;6928:22;6910:50;;;6900:60;;6871:95;6696:280;;;;;;6983:366;;;7104:2;7092:9;7083:7;7079:23;7075:32;7072:2;;;7120:1;7117;7110:12;7072:2;7155:1;7172:53;7217:7;7208:6;7197:9;7193:22;7172:53;;;7162:63;;7134:97;7262:2;7280:53;7325:7;7316:6;7305:9;7301:22;7280:53;;;7270:63;;7241:98;7066:283;;;;;;7356:235;;7457:2;7445:9;7436:7;7432:23;7428:32;7425:2;;;7473:1;7470;7463:12;7425:2;7508:1;7525:50;7567:7;7558:6;7547:9;7543:22;7525:50;;;7515:60;;7487:94;7419:172;;;;;7598:257;;7710:2;7698:9;7689:7;7685:23;7681:32;7678:2;;;7726:1;7723;7716:12;7678:2;7761:1;7778:61;7831:7;7822:6;7811:9;7807:22;7778:61;;;7768:71;;7740:105;7672:183;;;;;7862:472;;;7993:2;7981:9;7972:7;7968:23;7964:32;7961:2;;;8009:1;8006;7999:12;7961:2;8044:1;8061:53;8106:7;8097:6;8086:9;8082:22;8061:53;;;8051:63;;8023:97;8179:2;8168:9;8164:18;8151:32;8203:18;8195:6;8192:30;8189:2;;;8235:1;8232;8225:12;8189:2;8255:63;8310:7;8301:6;8290:9;8286:22;8255:63;;;8245:73;;8130:194;7955:379;;;;;;8341:701;;;;8498:2;8486:9;8477:7;8473:23;8469:32;8466:2;;;8514:1;8511;8504:12;8466:2;8549:1;8566:53;8611:7;8602:6;8591:9;8587:22;8566:53;;;8556:63;;8528:97;8684:2;8673:9;8669:18;8656:32;8708:18;8700:6;8697:30;8694:2;;;8740:1;8737;8730:12;8694:2;8760:63;8815:7;8806:6;8795:9;8791:22;8760:63;;;8750:73;;8635:194;8888:2;8877:9;8873:18;8860:32;8912:18;8904:6;8901:30;8898:2;;;8944:1;8941;8934:12;8898:2;8964:62;9018:7;9009:6;8998:9;8994:22;8964:62;;;8954:72;;8839:193;8460:582;;;;;;9049:239;;9152:2;9140:9;9131:7;9127:23;9123:32;9120:2;;;9168:1;9165;9158:12;9120:2;9203:1;9220:52;9264:7;9255:6;9244:9;9240:22;9220:52;;;9210:62;;9182:96;9114:174;;;;;9295:261;;9409:2;9397:9;9388:7;9384:23;9380:32;9377:2;;;9425:1;9422;9415:12;9377:2;9460:1;9477:63;9532:7;9523:6;9512:9;9508:22;9477:63;;;9467:73;;9439:107;9371:185;;;;;9563:460;;;9730:3;9718:9;9709:7;9705:23;9701:33;9698:2;;;9747:1;9744;9737:12;9698:2;9782:1;9799:76;9867:7;9858:6;9847:9;9843:22;9799:76;;;9789:86;;9761:120;9912:3;9931:76;9999:7;9990:6;9979:9;9975:22;9931:76;;;9921:86;;9891:122;9692:331;;;;;;10030:241;;10134:2;10122:9;10113:7;10109:23;10105:32;10102:2;;;10150:1;10147;10140:12;10102:2;10185:1;10202:53;10247:7;10238:6;10227:9;10223:22;10202:53;;;10192:63;;10164:97;10096:175;;;;;10279:171;;10365:45;10406:3;10399:5;10365:45;;;10439:4;10434:3;10430:14;10416:28;;10358:92;;;;;10458:142;10549:45;10588:5;10549:45;;;10544:3;10537:58;10531:69;;;10607:120;10690:31;10715:5;10690:31;;;10685:3;10678:44;10672:55;;;10767:559;10887:49;10930:5;10887:49;;;10949:74;11016:6;11011:3;10949:74;;;10942:81;;11043:51;11088:5;11043:51;;;11115:1;11100:214;11125:6;11122:1;11119:13;11100:214;;;11172:63;11231:3;11222:6;11216:13;11172:63;;;11165:70;;11252:55;11300:6;11252:55;;;11242:65;;11147:1;11144;11140:9;11135:14;;11100:214;;;11104:14;10866:460;;;;;11367:579;11497:49;11540:5;11497:49;;;11559:84;11636:6;11631:3;11559:84;;;11552:91;;11663:51;11708:5;11663:51;;;11735:1;11720:214;11745:6;11742:1;11739:13;11720:214;;;11792:63;11851:3;11842:6;11836:13;11792:63;;;11785:70;;11872:55;11920:6;11872:55;;;11862:65;;11767:1;11764;11760:9;11755:14;;11720:214;;;11724:14;11476:470;;;;;11954:111;12031:28;12053:5;12031:28;;;12026:3;12019:41;12013:52;;;12072:343;;12182:38;12214:5;12182:38;;;12232:70;12295:6;12290:3;12232:70;;;12225:77;;12307:52;12352:6;12347:3;12340:4;12333:5;12329:16;12307:52;;;12380:29;12402:6;12380:29;;;12375:3;12371:39;12364:46;;12162:253;;;;;;12422:347;;12534:39;12567:5;12534:39;;;12585:71;12649:6;12644:3;12585:71;;;12578:78;;12661:52;12706:6;12701:3;12694:4;12687:5;12683:16;12661:52;;;12734:29;12756:6;12734:29;;;12729:3;12725:39;12718:46;;12514:255;;;;;;12777:364;;12937:67;13001:2;12996:3;12937:67;;;12930:74;;13037:66;13033:1;13028:3;13024:11;13017:87;13132:2;13127:3;13123:12;13116:19;;12923:218;;;;13150:364;;13310:67;13374:2;13369:3;13310:67;;;13303:74;;13410:66;13406:1;13401:3;13397:11;13390:87;13505:2;13500:3;13496:12;13489:19;;13296:218;;;;13523:364;;13683:67;13747:2;13742:3;13683:67;;;13676:74;;13783:66;13779:1;13774:3;13770:11;13763:87;13878:2;13873:3;13869:12;13862:19;;13669:218;;;;13896:364;;14056:67;14120:2;14115:3;14056:67;;;14049:74;;14156:66;14152:1;14147:3;14143:11;14136:87;14251:2;14246:3;14242:12;14235:19;;14042:218;;;;14269:465;;14429:67;14493:2;14488:3;14429:67;;;14422:74;;14529:66;14525:1;14520:3;14516:11;14509:87;14630:66;14625:2;14620:3;14616:12;14609:88;14725:2;14720:3;14716:12;14709:19;;14415:319;;;;14743:364;;14903:67;14967:2;14962:3;14903:67;;;14896:74;;15003:66;14999:1;14994:3;14990:11;14983:87;15098:2;15093:3;15089:12;15082:19;;14889:218;;;;15116:465;;15276:67;15340:2;15335:3;15276:67;;;15269:74;;15376:66;15372:1;15367:3;15363:11;15356:87;15477:66;15472:2;15467:3;15463:12;15456:88;15572:2;15567:3;15563:12;15556:19;;15262:319;;;;15590:364;;15750:67;15814:2;15809:3;15750:67;;;15743:74;;15850:66;15846:1;15841:3;15837:11;15830:87;15945:2;15940:3;15936:12;15929:19;;15736:218;;;;15963:465;;16123:67;16187:2;16182:3;16123:67;;;16116:74;;16223:66;16219:1;16214:3;16210:11;16203:87;16324:66;16319:2;16314:3;16310:12;16303:88;16419:2;16414:3;16410:12;16403:19;;16109:319;;;;16491:560;16621:4;16616:3;16612:14;16648:1;16706:3;16699:5;16695:15;16689:22;16676:35;;16736:33;16759:9;16736:33;;;16775:61;16831:3;16826;16822:13;16809:11;16775:61;;;16659:183;16899:3;16892:5;16888:15;16882:22;16869:35;;16929:33;16952:9;16929:33;;;16968:62;17024:4;17019:3;17015:14;17002:11;16968:62;;;16852:184;16594:457;;;;;17113:540;17243:4;17238:3;17234:14;17270:1;17334:3;17327:5;17323:15;17344:104;17443:3;17438;17434:13;17421:11;17344:104;;;17281:173;17517:3;17510:5;17506:15;17527:105;17626:4;17621:3;17617:14;17604:11;17527:105;;;17464:174;17216:437;;;;;17713:743;17849:5;17844:3;17840:15;17877:1;17941:3;17934:5;17930:15;17951:108;18054:3;18049;18045:13;18032:11;17951:108;;;17888:177;18128:3;18121:5;18117:15;18138:109;18241:4;18236:3;18232:14;18219:11;18138:109;;;18075:178;18316:3;18309:5;18305:15;18326:109;18429:4;18424:3;18420:14;18407:11;18326:109;;;18263:178;17822:634;;;;;18463:110;18536:31;18561:5;18536:31;;;18531:3;18524:44;18518:55;;;18580:120;18663:31;18688:5;18663:31;;;18658:3;18651:44;18645:55;;;18707:213;;18825:2;18814:9;18810:18;18802:26;;18839:71;18907:1;18896:9;18892:17;18883:6;18839:71;;;18796:124;;;;;18927:647;;19155:3;19144:9;19140:19;19132:27;;19170:79;19246:1;19235:9;19231:17;19222:6;19170:79;;;19260:72;19328:2;19317:9;19313:18;19304:6;19260:72;;;19343;19411:2;19400:9;19396:18;19387:6;19343:72;;;19463:9;19457:4;19453:20;19448:2;19437:9;19433:18;19426:48;19488:76;19559:4;19550:6;19488:76;;;19480:84;;19126:448;;;;;;;;19581:201;;19693:2;19682:9;19678:18;19670:26;;19707:65;19769:1;19758:9;19754:17;19745:6;19707:65;;;19664:118;;;;;19789:301;;19927:2;19916:9;19912:18;19904:26;;19977:9;19971:4;19967:20;19963:1;19952:9;19948:17;19941:47;20002:78;20075:4;20066:6;20002:78;;;19994:86;;19898:192;;;;;20097:407;;20288:2;20277:9;20273:18;20265:26;;20338:9;20332:4;20328:20;20324:1;20313:9;20309:17;20302:47;20363:131;20489:4;20363:131;;;20355:139;;20259:245;;;;20511:407;;20702:2;20691:9;20687:18;20679:26;;20752:9;20746:4;20742:20;20738:1;20727:9;20723:17;20716:47;20777:131;20903:4;20777:131;;;20769:139;;20673:245;;;;20925:407;;21116:2;21105:9;21101:18;21093:26;;21166:9;21160:4;21156:20;21152:1;21141:9;21137:17;21130:47;21191:131;21317:4;21191:131;;;21183:139;;21087:245;;;;21339:407;;21530:2;21519:9;21515:18;21507:26;;21580:9;21574:4;21570:20;21566:1;21555:9;21551:17;21544:47;21605:131;21731:4;21605:131;;;21597:139;;21501:245;;;;21753:407;;21944:2;21933:9;21929:18;21921:26;;21994:9;21988:4;21984:20;21980:1;21969:9;21965:17;21958:47;22019:131;22145:4;22019:131;;;22011:139;;21915:245;;;;22167:407;;22358:2;22347:9;22343:18;22335:26;;22408:9;22402:4;22398:20;22394:1;22383:9;22379:17;22372:47;22433:131;22559:4;22433:131;;;22425:139;;22329:245;;;;22581:407;;22772:2;22761:9;22757:18;22749:26;;22822:9;22816:4;22812:20;22808:1;22797:9;22793:17;22786:47;22847:131;22973:4;22847:131;;;22839:139;;22743:245;;;;22995:407;;23186:2;23175:9;23171:18;23163:26;;23236:9;23230:4;23226:20;23222:1;23211:9;23207:17;23200:47;23261:131;23387:4;23261:131;;;23253:139;;23157:245;;;;23409:407;;23600:2;23589:9;23585:18;23577:26;;23650:9;23644:4;23640:20;23636:1;23625:9;23621:17;23614:47;23675:131;23801:4;23675:131;;;23667:139;;23571:245;;;;23823:498;;24055:3;24044:9;24040:19;24032:27;;24070:114;24181:1;24170:9;24166:17;24157:6;24070:114;;;24195:116;24306:3;24295:9;24291:19;24282:6;24195:116;;;24026:295;;;;;;24328:213;;24446:2;24435:9;24431:18;24423:26;;24460:71;24528:1;24517:9;24513:17;24504:6;24460:71;;;24417:124;;;;;24548:256;;24610:2;24604:9;24594:19;;24648:4;24640:6;24636:17;24747:6;24735:10;24732:22;24711:18;24699:10;24696:34;24693:62;24690:2;;;24768:1;24765;24758:12;24690:2;24788:10;24784:2;24777:22;24588:216;;;;;24811:229;;24964:18;24956:6;24953:30;24950:2;;;24996:1;24993;24986:12;24950:2;25025:4;25017:6;25013:17;25005:25;;24887:153;;;;25047:233;;25204:18;25196:6;25193:30;25190:2;;;25236:1;25233;25226:12;25190:2;25265:4;25257:6;25253:17;25245:25;;25127:153;;;;25287:258;;25430:18;25422:6;25419:30;25416:2;;;25462:1;25459;25452:12;25416:2;25506:4;25502:9;25495:4;25487:6;25483:17;25479:33;25471:41;;25535:4;25529;25525:15;25517:23;;25353:192;;;;25552:259;;25696:18;25688:6;25685:30;25682:2;;;25728:1;25725;25718:12;25682:2;25772:4;25768:9;25761:4;25753:6;25749:17;25745:33;25737:41;;25801:4;25795;25791:15;25783:23;;25619:192;;;;25820:103;;25912:4;25900:16;;25892:31;;;;25932:93;;26017:3;26007:13;;26001:24;;;;26032:91;;26112:5;26106:12;26096:22;;26090:33;;;;26130:92;;26211:5;26205:12;26195:22;;26189:33;;;;26230:112;;26334:1;26328:4;26324:12;26312:24;;26305:37;;;;26351:130;;26472:3;26457:18;;26450:31;;;;;26490:140;;26621:3;26606:18;;26599:31;;;;;26639:162;;26753:6;26748:3;26741:19;26790:4;26785:3;26781:14;26766:29;;26734:67;;;;;26810:163;;26925:6;26920:3;26913:19;26962:4;26957:3;26953:14;26938:29;;26906:67;;;;;26981:105;;27050:31;27075:5;27050:31;;;27039:42;;27033:53;;;;27093:92;;27173:5;27166:13;27159:21;27148:32;;27142:43;;;;27192:128;;27272:42;27265:5;27261:54;27250:65;;27244:76;;;;27327:79;;27396:5;27385:16;;27379:27;;;;27413:105;;27482:31;27507:5;27482:31;;;27471:42;;27465:53;;;;27525:92;;27605:5;27598:13;27591:21;27580:32;;27574:43;;;;27624:79;;27693:5;27682:16;;27676:27;;;;27710:151;;27789:66;27782:5;27778:78;27767:89;;27761:100;;;;27868:128;;27948:42;27941:5;27937:54;27926:65;;27920:76;;;;28003:79;;28072:5;28061:16;;28055:27;;;;28089:129;;28176:37;28207:5;28176:37;;;28163:50;;28157:61;;;;28225:121;;28304:37;28335:5;28304:37;;;28291:50;;28285:61;;;;28353:115;;28432:31;28457:5;28432:31;;;28419:44;;28413:55;;;;28476:145;28557:6;28552:3;28547;28534:30;28613:1;28604:6;28599:3;28595:16;28588:27;28527:94;;;;28630:268;28695:1;28702:101;28716:6;28713:1;28710:13;28702:101;;;28792:1;28787:3;28783:11;28777:18;28773:1;28768:3;28764:11;28757:39;28738:2;28735:1;28731:10;28726:15;;28702:101;;;28818:6;28815:1;28812:13;28809:2;;;28883:1;28874:6;28869:3;28865:16;28858:27;28809:2;28679:219;;;;;28906:97;;28994:2;28990:7;28985:2;28978:5;28974:14;28970:28;28960:38;;28954:49;;;;29012:89;;29089:5;29086:1;29082:13;29070:25;;29063:38;;;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./Verifier.sol\";\r\nimport \"./ERC721Mintable.sol\";\r\n\r\n\r\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\r\ncontract SolnSquareVerifier is RealEstateMarket {\r\n    using Pairing for *;\r\n\r\n    // TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\r\n    Verifier verifierContract = new Verifier();\r\n\r\n    uint256 solCount;\r\n\r\n    struct Solution {\r\n        Verifier.Proof   proof;\r\n        uint[2]          input;\r\n    }\r\n\r\n    // TODO define a solutions struct that can hold an index & an address\r\n    struct UserSolution {\r\n        Solution solution;\r\n        uint     index;\r\n        address  owner;\r\n    }\r\n\r\n    // TODO define an array of the above struct\r\n    UserSolution[] solutionsStorage;\r\n\r\n    // TODO define a mapping to store unique solutions submitted\r\n    mapping(uint => bool) private usedSolns;\r\n\r\n    // TODO Create an event to emit when a solution is added\r\n    event SolutionAdded();\r\n\r\n    constructor() public\r\n    {\r\n        solCount = 0;\r\n    }\r\n\r\n    // TODO Create a function to add the solutions to the array and emit the event\r\n    function addSolution(Verifier.Proof memory proof, uint[2] memory input) public\r\n    {\r\n        solCount++;\r\n        UserSolution memory newSolution = UserSolution(Solution(proof, input), solCount, msg.sender);\r\n        solutionsStorage.push(newSolution);\r\n        emit SolutionAdded();\r\n    }\r\n\r\n    // TODO Create a function to mint new NFT only after the solution has been verified\r\n    //  - make sure the solution is unique (has not been used before)\r\n    //  - make sure you handle metadata as well as tokenSuplly\r\n    function mintToken(address to, uint256 tokenId) public\r\n    {\r\n        bool foundValid = false;\r\n\r\n        for(uint i = 0; i < solutionsStorage.length; i++) {\r\n            if(solutionsStorage[i].owner == to) {\r\n                if(!usedSolns[solutionsStorage[i].index]) {\r\n                    if(verifierContract.verifyTx(solutionsStorage[i].solution.proof, solutionsStorage[i].solution.input)) {\r\n                        usedSolns[solutionsStorage[i].index] = true;\r\n                        foundValid = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        require(foundValid, \"The address has no send a valid solution\");\r\n        super.mint(to, tokenId);\r\n    }\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "sourcePath": "E:\\Blockchain\\RealEstate\\Blockchain-Capstone\\eth-contracts\\contracts\\SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7938
      ]
    },
    "id": 7939,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7775,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "id": 7776,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:7"
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7777,
        "nodeType": "ImportDirective",
        "scope": 7939,
        "sourceUnit": 8861,
        "src": "71:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7778,
        "nodeType": "ImportDirective",
        "scope": 7939,
        "sourceUnit": 1449,
        "src": "97:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7779,
              "name": "RealEstateMarket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1448,
              "src": "267:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RealEstateMarket_$1448",
                "typeString": "contract RealEstateMarket"
              }
            },
            "id": 7780,
            "nodeType": "InheritanceSpecifier",
            "src": "267:16:7"
          }
        ],
        "contractDependencies": [
          998,
          1296,
          1414,
          1448,
          410,
          466,
          512,
          7773,
          8860
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7938,
        "linearizedBaseContracts": [
          7938,
          1448,
          1414,
          7773,
          1296,
          998,
          512,
          466,
          410
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7782,
            "libraryName": {
              "contractScope": null,
              "id": 7781,
              "name": "Pairing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8513,
              "src": "297:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pairing_$8513",
                "typeString": "library Pairing"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "291:20:7",
            "typeName": null
          },
          {
            "constant": false,
            "id": 7787,
            "name": "verifierContract",
            "nodeType": "VariableDeclaration",
            "scope": 7938,
            "src": "431:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8860",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7783,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8860,
              "src": "431:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8860",
                "typeString": "contract Verifier"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 7785,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "459:12:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Verifier_$8860_$",
                  "typeString": "function () returns (contract Verifier)"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 7784,
                  "name": "Verifier",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 8860,
                  "src": "463:8:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Verifier_$8860",
                    "typeString": "contract Verifier"
                  }
                }
              },
              "id": 7786,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "459:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8860",
                "typeString": "contract Verifier"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7789,
            "name": "solCount",
            "nodeType": "VariableDeclaration",
            "scope": 7938,
            "src": "482:16:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7788,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "482:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7796,
            "members": [
              {
                "constant": false,
                "id": 7791,
                "name": "proof",
                "nodeType": "VariableDeclaration",
                "scope": 7796,
                "src": "534:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proof_$8534_storage_ptr",
                  "typeString": "struct Verifier.Proof"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 7790,
                  "name": "Verifier.Proof",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 8534,
                  "src": "534:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8534_storage_ptr",
                    "typeString": "struct Verifier.Proof"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7795,
                "name": "input",
                "nodeType": "VariableDeclaration",
                "scope": 7796,
                "src": "567:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                  "typeString": "uint256[2]"
                },
                "typeName": {
                  "baseType": {
                    "id": 7792,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7794,
                  "length": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 7793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "572:1:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "567:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                    "typeString": "uint256[2]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7938,
            "src": "507:90:7",
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.UserSolution",
            "id": 7803,
            "members": [
              {
                "constant": false,
                "id": 7798,
                "name": "solution",
                "nodeType": "VariableDeclaration",
                "scope": 7803,
                "src": "711:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7796_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 7797,
                  "name": "Solution",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 7796,
                  "src": "711:8:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Solution_$7796_storage_ptr",
                    "typeString": "struct SolnSquareVerifier.Solution"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7800,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7803,
                "src": "739:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7799,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "739:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7802,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 7803,
                "src": "764:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7801,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "764:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserSolution",
            "nodeType": "StructDefinition",
            "scope": 7938,
            "src": "680:106:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7806,
            "name": "solutionsStorage",
            "nodeType": "VariableDeclaration",
            "scope": 7938,
            "src": "843:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.UserSolution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7804,
                "name": "UserSolution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7803,
                "src": "843:12:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserSolution_$7803_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.UserSolution"
                }
              },
              "id": 7805,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "843:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.UserSolution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7810,
            "name": "usedSolns",
            "nodeType": "VariableDeclaration",
            "scope": 7938,
            "src": "949:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 7809,
              "keyType": {
                "id": 7807,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "957:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "949:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 7808,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "965:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7812,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1078:2:7"
            },
            "src": "1059:22:7"
          },
          {
            "body": {
              "id": 7819,
              "nodeType": "Block",
              "src": "1115:31:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7815,
                      "name": "solCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7789,
                      "src": "1126:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1137:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1126:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7818,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:12:7"
                }
              ]
            },
            "documentation": null,
            "id": 7820,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:2:7"
            },
            "returnParameters": {
              "id": 7814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1115:0:7"
            },
            "scope": 7938,
            "src": "1089:57:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7853,
              "nodeType": "Block",
              "src": "1322:208:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1333:10:7",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7829,
                      "name": "solCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7789,
                      "src": "1333:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7831,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:10:7"
                },
                {
                  "assignments": [
                    7833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7833,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7853,
                      "src": "1354:31:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserSolution_$7803_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.UserSolution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7832,
                        "name": "UserSolution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7803,
                        "src": "1354:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSolution_$7803_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.UserSolution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7843,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7836,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7822,
                            "src": "1410:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8534_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7837,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7826,
                            "src": "1417:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8534_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7835,
                          "name": "Solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7796,
                          "src": "1401:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Solution_$7796_storage_ptr_$",
                            "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                          }
                        },
                        "id": 7838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1401:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7796_memory",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7839,
                        "name": "solCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7789,
                        "src": "1425:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7840,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8875,
                          "src": "1435:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1435:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7796_memory",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7834,
                      "name": "UserSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7803,
                      "src": "1388:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserSolution_$7803_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.UserSolution storage pointer)"
                      }
                    },
                    "id": 7842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:58:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserSolution_$7803_memory",
                      "typeString": "struct SolnSquareVerifier.UserSolution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1354:92:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7847,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7833,
                        "src": "1479:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserSolution_$7803_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.UserSolution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserSolution_$7803_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.UserSolution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7844,
                        "name": "solutionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7806,
                        "src": "1457:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref"
                        }
                      },
                      "id": 7846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1457:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_UserSolution_$7803_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.UserSolution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7849,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:34:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7850,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7812,
                      "src": "1507:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7852,
                  "nodeType": "EmitStatement",
                  "src": "1502:20:7"
                }
              ]
            },
            "documentation": null,
            "id": 7854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7822,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7854,
                  "src": "1259:27:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8534_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7821,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8534,
                    "src": "1259:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8534_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7826,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7854,
                  "src": "1288:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7823,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1288:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7825,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1293:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1288:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1258:51:7"
            },
            "returnParameters": {
              "id": 7828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:7"
            },
            "scope": 7938,
            "src": "1238:292:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7936,
              "nodeType": "Block",
              "src": "1822:664:7",
              "statements": [
                {
                  "assignments": [
                    7862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7862,
                      "name": "foundValid",
                      "nodeType": "VariableDeclaration",
                      "scope": 7936,
                      "src": "1833:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7861,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1833:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7864,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 7863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1851:5:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1833:23:7"
                },
                {
                  "body": {
                    "id": 7922,
                    "nodeType": "Block",
                    "src": "1919:452:7",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 7881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 7876,
                                "name": "solutionsStorage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7806,
                                "src": "1937:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage",
                                  "typeString": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref"
                                }
                              },
                              "id": 7878,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 7877,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7866,
                                "src": "1954:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1937:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserSolution_$7803_storage",
                                "typeString": "struct SolnSquareVerifier.UserSolution storage ref"
                              }
                            },
                            "id": 7879,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7802,
                            "src": "1937:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7880,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7856,
                            "src": "1966:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1937:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 7921,
                        "nodeType": "IfStatement",
                        "src": "1934:426:7",
                        "trueBody": {
                          "id": 7920,
                          "nodeType": "Block",
                          "src": "1970:390:7",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 7888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "1992:37:7",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 7882,
                                    "name": "usedSolns",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7810,
                                    "src": "1993:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 7887,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 7883,
                                        "name": "solutionsStorage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7806,
                                        "src": "2003:16:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage",
                                          "typeString": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref"
                                        }
                                      },
                                      "id": 7885,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 7884,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7866,
                                        "src": "2020:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2003:19:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserSolution_$7803_storage",
                                        "typeString": "struct SolnSquareVerifier.UserSolution storage ref"
                                      }
                                    },
                                    "id": 7886,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "index",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7800,
                                    "src": "2003:25:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1993:36:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 7919,
                              "nodeType": "IfStatement",
                              "src": "1989:356:7",
                              "trueBody": {
                                "id": 7918,
                                "nodeType": "Block",
                                "src": "2031:314:7",
                                "statements": [
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 7891,
                                                "name": "solutionsStorage",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7806,
                                                "src": "2083:16:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage",
                                                  "typeString": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref"
                                                }
                                              },
                                              "id": 7893,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 7892,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7866,
                                                "src": "2100:1:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "2083:19:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserSolution_$7803_storage",
                                                "typeString": "struct SolnSquareVerifier.UserSolution storage ref"
                                              }
                                            },
                                            "id": 7894,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "solution",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 7798,
                                            "src": "2083:28:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Solution_$7796_storage",
                                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                            }
                                          },
                                          "id": 7895,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "proof",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 7791,
                                          "src": "2083:34:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proof_$8534_storage",
                                            "typeString": "struct Verifier.Proof storage ref"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 7896,
                                                "name": "solutionsStorage",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7806,
                                                "src": "2119:16:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage",
                                                  "typeString": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref"
                                                }
                                              },
                                              "id": 7898,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 7897,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7866,
                                                "src": "2136:1:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "2119:19:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserSolution_$7803_storage",
                                                "typeString": "struct SolnSquareVerifier.UserSolution storage ref"
                                              }
                                            },
                                            "id": 7899,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "solution",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 7798,
                                            "src": "2119:28:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Solution_$7796_storage",
                                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                            }
                                          },
                                          "id": 7900,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "input",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 7795,
                                          "src": "2119:34:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                            "typeString": "uint256[2] storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Proof_$8534_storage",
                                            "typeString": "struct Verifier.Proof storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                            "typeString": "uint256[2] storage ref"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 7889,
                                          "name": "verifierContract",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7787,
                                          "src": "2057:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Verifier_$8860",
                                            "typeString": "contract Verifier"
                                          }
                                        },
                                        "id": 7890,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "verifyTx",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8859,
                                        "src": "2057:25:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8534_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                                          "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                        }
                                      },
                                      "id": 7901,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2057:97:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": null,
                                    "id": 7917,
                                    "nodeType": "IfStatement",
                                    "src": "2054:272:7",
                                    "trueBody": {
                                      "id": 7916,
                                      "nodeType": "Block",
                                      "src": "2156:170:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 7909,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 7902,
                                                "name": "usedSolns",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7810,
                                                "src": "2183:9:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                                  "typeString": "mapping(uint256 => bool)"
                                                }
                                              },
                                              "id": 7907,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 7903,
                                                    "name": "solutionsStorage",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 7806,
                                                    "src": "2193:16:7",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage",
                                                      "typeString": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref"
                                                    }
                                                  },
                                                  "id": 7905,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 7904,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 7866,
                                                    "src": "2210:1:7",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "2193:19:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_UserSolution_$7803_storage",
                                                    "typeString": "struct SolnSquareVerifier.UserSolution storage ref"
                                                  }
                                                },
                                                "id": 7906,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "index",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 7800,
                                                "src": "2193:25:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "2183:36:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "argumentTypes": null,
                                              "hexValue": "74727565",
                                              "id": 7908,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2222:4:7",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "true"
                                            },
                                            "src": "2183:43:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 7910,
                                          "nodeType": "ExpressionStatement",
                                          "src": "2183:43:7"
                                        },
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 7913,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "argumentTypes": null,
                                              "id": 7911,
                                              "name": "foundValid",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7862,
                                              "src": "2253:10:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "argumentTypes": null,
                                              "hexValue": "74727565",
                                              "id": 7912,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2266:4:7",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "true"
                                            },
                                            "src": "2253:17:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 7914,
                                          "nodeType": "ExpressionStatement",
                                          "src": "2253:17:7"
                                        },
                                        {
                                          "id": 7915,
                                          "nodeType": "Break",
                                          "src": "2297:5:7"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7869,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7866,
                      "src": "1885:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7870,
                        "name": "solutionsStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7806,
                        "src": "1889:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UserSolution_$7803_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref"
                        }
                      },
                      "id": 7871,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1889:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1885:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7923,
                  "initializationExpression": {
                    "assignments": [
                      7866
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7866,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 7923,
                        "src": "1873:6:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7865,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1873:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 7868,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1882:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1873:10:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 7874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1914:3:7",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 7873,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7866,
                        "src": "1914:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7875,
                    "nodeType": "ExpressionStatement",
                    "src": "1914:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "1869:502:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7925,
                        "name": "foundValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7862,
                        "src": "2389:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206164647265737320686173206e6f2073656e6420612076616c696420736f6c7574696f6e",
                        "id": 7926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2401:42:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b2b11ba5d436c7f91fc1cdc488814196adbae8747dc40162c9b57e8b9f4e7ad",
                          "typeString": "literal_string \"The address has no send a valid solution\""
                        },
                        "value": "The address has no send a valid solution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b2b11ba5d436c7f91fc1cdc488814196adbae8747dc40162c9b57e8b9f4e7ad",
                          "typeString": "literal_string \"The address has no send a valid solution\""
                        }
                      ],
                      "id": 7924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8878,
                        8879
                      ],
                      "referencedDeclaration": 8879,
                      "src": "2381:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2381:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7928,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:63:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7932,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7856,
                        "src": "2466:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7933,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7858,
                        "src": "2470:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7929,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8930,
                        "src": "2455:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7938",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1447,
                      "src": "2455:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2455:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7935,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:23:7"
                }
              ]
            },
            "documentation": null,
            "id": 7937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7856,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "1781:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7858,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "1793:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1780:29:7"
            },
            "returnParameters": {
              "id": 7860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1822:0:7"
            },
            "scope": 7938,
            "src": "1762:724:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7939,
        "src": "236:2253:7"
      }
    ],
    "src": "0:2549:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7938
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7775,
        "name": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7776,
        "name": "PragmaDirective",
        "src": "34:33:7"
      },
      {
        "attributes": {
          "SourceUnit": 8861,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7939,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7777,
        "name": "ImportDirective",
        "src": "71:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1449,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7939,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7778,
        "name": "ImportDirective",
        "src": "97:30:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            998,
            1296,
            1414,
            1448,
            410,
            466,
            512,
            7773,
            8860
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7938,
            1448,
            1414,
            7773,
            1296,
            998,
            512,
            466,
            410
          ],
          "name": "SolnSquareVerifier",
          "scope": 7939
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "RealEstateMarket",
                  "referencedDeclaration": 1448,
                  "type": "contract RealEstateMarket"
                },
                "id": 7779,
                "name": "UserDefinedTypeName",
                "src": "267:16:7"
              }
            ],
            "id": 7780,
            "name": "InheritanceSpecifier",
            "src": "267:16:7"
          },
          {
            "attributes": {
              "typeName": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Pairing",
                  "referencedDeclaration": 8513,
                  "type": "library Pairing"
                },
                "id": 7781,
                "name": "UserDefinedTypeName",
                "src": "297:7:7"
              }
            ],
            "id": 7782,
            "name": "UsingForDirective",
            "src": "291:20:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifierContract",
              "scope": 7938,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8860,
                  "type": "contract Verifier"
                },
                "id": 7783,
                "name": "UserDefinedTypeName",
                "src": "431:8:7"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "arguments": [
                    null
                  ],
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "type": "contract Verifier",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        null
                      ],
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "type": "function () returns (contract Verifier)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier",
                          "referencedDeclaration": 8860,
                          "type": "contract Verifier"
                        },
                        "id": 7784,
                        "name": "UserDefinedTypeName",
                        "src": "463:8:7"
                      }
                    ],
                    "id": 7785,
                    "name": "NewExpression",
                    "src": "459:12:7"
                  }
                ],
                "id": 7786,
                "name": "FunctionCall",
                "src": "459:14:7"
              }
            ],
            "id": 7787,
            "name": "VariableDeclaration",
            "src": "431:42:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solCount",
              "scope": 7938,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7788,
                "name": "ElementaryTypeName",
                "src": "482:7:7"
              }
            ],
            "id": 7789,
            "name": "VariableDeclaration",
            "src": "482:16:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7938,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "proof",
                  "scope": 7796,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Verifier.Proof",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Verifier.Proof",
                      "referencedDeclaration": 8534,
                      "type": "struct Verifier.Proof"
                    },
                    "id": 7790,
                    "name": "UserDefinedTypeName",
                    "src": "534:14:7"
                  }
                ],
                "id": 7791,
                "name": "VariableDeclaration",
                "src": "534:22:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "input",
                  "scope": 7796,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256[2]",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "uint256[2]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 7792,
                        "name": "ElementaryTypeName",
                        "src": "567:4:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "32",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 2",
                          "value": "2"
                        },
                        "id": 7793,
                        "name": "Literal",
                        "src": "572:1:7"
                      }
                    ],
                    "id": 7794,
                    "name": "ArrayTypeName",
                    "src": "567:7:7"
                  }
                ],
                "id": 7795,
                "name": "VariableDeclaration",
                "src": "567:22:7"
              }
            ],
            "id": 7796,
            "name": "StructDefinition",
            "src": "507:90:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.UserSolution",
              "name": "UserSolution",
              "scope": 7938,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "solution",
                  "scope": 7803,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct SolnSquareVerifier.Solution",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7796,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7797,
                    "name": "UserDefinedTypeName",
                    "src": "711:8:7"
                  }
                ],
                "id": 7798,
                "name": "VariableDeclaration",
                "src": "711:17:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7803,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 7799,
                    "name": "ElementaryTypeName",
                    "src": "739:4:7"
                  }
                ],
                "id": 7800,
                "name": "VariableDeclaration",
                "src": "739:14:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "owner",
                  "scope": 7803,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7801,
                    "name": "ElementaryTypeName",
                    "src": "764:7:7"
                  }
                ],
                "id": 7802,
                "name": "VariableDeclaration",
                "src": "764:14:7"
              }
            ],
            "id": 7803,
            "name": "StructDefinition",
            "src": "680:106:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionsStorage",
              "scope": 7938,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.UserSolution[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.UserSolution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "UserSolution",
                      "referencedDeclaration": 7803,
                      "type": "struct SolnSquareVerifier.UserSolution"
                    },
                    "id": 7804,
                    "name": "UserDefinedTypeName",
                    "src": "843:12:7"
                  }
                ],
                "id": 7805,
                "name": "ArrayTypeName",
                "src": "843:14:7"
              }
            ],
            "id": 7806,
            "name": "VariableDeclaration",
            "src": "843:31:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "usedSolns",
              "scope": 7938,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => bool)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 7807,
                    "name": "ElementaryTypeName",
                    "src": "957:4:7"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7808,
                    "name": "ElementaryTypeName",
                    "src": "965:4:7"
                  }
                ],
                "id": 7809,
                "name": "Mapping",
                "src": "949:21:7"
              }
            ],
            "id": 7810,
            "name": "VariableDeclaration",
            "src": "949:39:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7811,
                "name": "ParameterList",
                "src": "1078:2:7"
              }
            ],
            "id": 7812,
            "name": "EventDefinition",
            "src": "1059:22:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 7938,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7813,
                "name": "ParameterList",
                "src": "1100:2:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7814,
                "name": "ParameterList",
                "src": "1115:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7789,
                              "type": "uint256",
                              "value": "solCount"
                            },
                            "id": 7815,
                            "name": "Identifier",
                            "src": "1126:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 7816,
                            "name": "Literal",
                            "src": "1137:1:7"
                          }
                        ],
                        "id": 7817,
                        "name": "Assignment",
                        "src": "1126:12:7"
                      }
                    ],
                    "id": 7818,
                    "name": "ExpressionStatement",
                    "src": "1126:12:7"
                  }
                ],
                "id": 7819,
                "name": "Block",
                "src": "1115:31:7"
              }
            ],
            "id": 7820,
            "name": "FunctionDefinition",
            "src": "1089:57:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7938,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7854,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier.Proof",
                          "referencedDeclaration": 8534,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7821,
                        "name": "UserDefinedTypeName",
                        "src": "1259:14:7"
                      }
                    ],
                    "id": 7822,
                    "name": "VariableDeclaration",
                    "src": "1259:27:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7854,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7823,
                            "name": "ElementaryTypeName",
                            "src": "1288:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7824,
                            "name": "Literal",
                            "src": "1293:1:7"
                          }
                        ],
                        "id": 7825,
                        "name": "ArrayTypeName",
                        "src": "1288:7:7"
                      }
                    ],
                    "id": 7826,
                    "name": "VariableDeclaration",
                    "src": "1288:20:7"
                  }
                ],
                "id": 7827,
                "name": "ParameterList",
                "src": "1258:51:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7828,
                "name": "ParameterList",
                "src": "1322:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7789,
                              "type": "uint256",
                              "value": "solCount"
                            },
                            "id": 7829,
                            "name": "Identifier",
                            "src": "1333:8:7"
                          }
                        ],
                        "id": 7830,
                        "name": "UnaryOperation",
                        "src": "1333:10:7"
                      }
                    ],
                    "id": 7831,
                    "name": "ExpressionStatement",
                    "src": "1333:10:7"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7833
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newSolution",
                          "scope": 7853,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.UserSolution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "UserSolution",
                              "referencedDeclaration": 7803,
                              "type": "struct SolnSquareVerifier.UserSolution"
                            },
                            "id": 7832,
                            "name": "UserDefinedTypeName",
                            "src": "1354:12:7"
                          }
                        ],
                        "id": 7833,
                        "name": "VariableDeclaration",
                        "src": "1354:31:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.UserSolution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7796_memory",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7803,
                              "type": "type(struct SolnSquareVerifier.UserSolution storage pointer)",
                              "value": "UserSolution"
                            },
                            "id": 7834,
                            "name": "Identifier",
                            "src": "1388:12:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8534_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7796,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7835,
                                "name": "Identifier",
                                "src": "1401:8:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7822,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7836,
                                "name": "Identifier",
                                "src": "1410:5:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7826,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7837,
                                "name": "Identifier",
                                "src": "1417:5:7"
                              }
                            ],
                            "id": 7838,
                            "name": "FunctionCall",
                            "src": "1401:22:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7789,
                              "type": "uint256",
                              "value": "solCount"
                            },
                            "id": 7839,
                            "name": "Identifier",
                            "src": "1425:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8875,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7840,
                                "name": "Identifier",
                                "src": "1435:3:7"
                              }
                            ],
                            "id": 7841,
                            "name": "MemberAccess",
                            "src": "1435:10:7"
                          }
                        ],
                        "id": 7842,
                        "name": "FunctionCall",
                        "src": "1388:58:7"
                      }
                    ],
                    "id": 7843,
                    "name": "VariableDeclarationStatement",
                    "src": "1354:92:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_UserSolution_$7803_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.UserSolution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.UserSolution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7806,
                                  "type": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref",
                                  "value": "solutionsStorage"
                                },
                                "id": 7844,
                                "name": "Identifier",
                                "src": "1457:16:7"
                              }
                            ],
                            "id": 7846,
                            "name": "MemberAccess",
                            "src": "1457:21:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7833,
                              "type": "struct SolnSquareVerifier.UserSolution memory",
                              "value": "newSolution"
                            },
                            "id": 7847,
                            "name": "Identifier",
                            "src": "1479:11:7"
                          }
                        ],
                        "id": 7848,
                        "name": "FunctionCall",
                        "src": "1457:34:7"
                      }
                    ],
                    "id": 7849,
                    "name": "ExpressionStatement",
                    "src": "1457:34:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7812,
                              "type": "function ()",
                              "value": "SolutionAdded"
                            },
                            "id": 7850,
                            "name": "Identifier",
                            "src": "1507:13:7"
                          }
                        ],
                        "id": 7851,
                        "name": "FunctionCall",
                        "src": "1507:15:7"
                      }
                    ],
                    "id": 7852,
                    "name": "EmitStatement",
                    "src": "1502:20:7"
                  }
                ],
                "id": 7853,
                "name": "Block",
                "src": "1322:208:7"
              }
            ],
            "id": 7854,
            "name": "FunctionDefinition",
            "src": "1238:292:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintToken",
              "scope": 7938,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7937,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7855,
                        "name": "ElementaryTypeName",
                        "src": "1781:7:7"
                      }
                    ],
                    "id": 7856,
                    "name": "VariableDeclaration",
                    "src": "1781:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7937,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7857,
                        "name": "ElementaryTypeName",
                        "src": "1793:7:7"
                      }
                    ],
                    "id": 7858,
                    "name": "VariableDeclaration",
                    "src": "1793:15:7"
                  }
                ],
                "id": 7859,
                "name": "ParameterList",
                "src": "1780:29:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7860,
                "name": "ParameterList",
                "src": "1822:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7862
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "foundValid",
                          "scope": 7936,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7861,
                            "name": "ElementaryTypeName",
                            "src": "1833:4:7"
                          }
                        ],
                        "id": 7862,
                        "name": "VariableDeclaration",
                        "src": "1833:15:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "66616c7365",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "false"
                        },
                        "id": 7863,
                        "name": "Literal",
                        "src": "1851:5:7"
                      }
                    ],
                    "id": 7864,
                    "name": "VariableDeclarationStatement",
                    "src": "1833:23:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            7866
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 7923,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7865,
                                "name": "ElementaryTypeName",
                                "src": "1873:4:7"
                              }
                            ],
                            "id": 7866,
                            "name": "VariableDeclaration",
                            "src": "1873:6:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 7867,
                            "name": "Literal",
                            "src": "1882:1:7"
                          }
                        ],
                        "id": 7868,
                        "name": "VariableDeclarationStatement",
                        "src": "1873:10:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7866,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 7869,
                            "name": "Identifier",
                            "src": "1885:1:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7806,
                                  "type": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref",
                                  "value": "solutionsStorage"
                                },
                                "id": 7870,
                                "name": "Identifier",
                                "src": "1889:16:7"
                              }
                            ],
                            "id": 7871,
                            "name": "MemberAccess",
                            "src": "1889:23:7"
                          }
                        ],
                        "id": 7872,
                        "name": "BinaryOperation",
                        "src": "1885:27:7"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7866,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 7873,
                                "name": "Identifier",
                                "src": "1914:1:7"
                              }
                            ],
                            "id": 7874,
                            "name": "UnaryOperation",
                            "src": "1914:3:7"
                          }
                        ],
                        "id": 7875,
                        "name": "ExpressionStatement",
                        "src": "1914:3:7"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "owner",
                                      "referencedDeclaration": 7802,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct SolnSquareVerifier.UserSolution storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7806,
                                              "type": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref",
                                              "value": "solutionsStorage"
                                            },
                                            "id": 7876,
                                            "name": "Identifier",
                                            "src": "1937:16:7"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7866,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 7877,
                                            "name": "Identifier",
                                            "src": "1954:1:7"
                                          }
                                        ],
                                        "id": 7878,
                                        "name": "IndexAccess",
                                        "src": "1937:19:7"
                                      }
                                    ],
                                    "id": 7879,
                                    "name": "MemberAccess",
                                    "src": "1937:25:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7856,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 7880,
                                    "name": "Identifier",
                                    "src": "1966:2:7"
                                  }
                                ],
                                "id": 7881,
                                "name": "BinaryOperation",
                                "src": "1937:31:7"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "falseBody": null
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7810,
                                                  "type": "mapping(uint256 => bool)",
                                                  "value": "usedSolns"
                                                },
                                                "id": 7882,
                                                "name": "Identifier",
                                                "src": "1993:9:7"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "index",
                                                  "referencedDeclaration": 7800,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct SolnSquareVerifier.UserSolution storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 7806,
                                                          "type": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref",
                                                          "value": "solutionsStorage"
                                                        },
                                                        "id": 7883,
                                                        "name": "Identifier",
                                                        "src": "2003:16:7"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 7866,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 7884,
                                                        "name": "Identifier",
                                                        "src": "2020:1:7"
                                                      }
                                                    ],
                                                    "id": 7885,
                                                    "name": "IndexAccess",
                                                    "src": "2003:19:7"
                                                  }
                                                ],
                                                "id": 7886,
                                                "name": "MemberAccess",
                                                "src": "2003:25:7"
                                              }
                                            ],
                                            "id": 7887,
                                            "name": "IndexAccess",
                                            "src": "1993:36:7"
                                          }
                                        ],
                                        "id": 7888,
                                        "name": "UnaryOperation",
                                        "src": "1992:37:7"
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "falseBody": null
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "bool",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_struct$_Proof_$8534_storage",
                                                          "typeString": "struct Verifier.Proof storage ref"
                                                        },
                                                        {
                                                          "typeIdentifier": "t_array$_t_uint256_$2_storage",
                                                          "typeString": "uint256[2] storage ref"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "verifyTx",
                                                      "referencedDeclaration": 8859,
                                                      "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 7787,
                                                          "type": "contract Verifier",
                                                          "value": "verifierContract"
                                                        },
                                                        "id": 7889,
                                                        "name": "Identifier",
                                                        "src": "2057:16:7"
                                                      }
                                                    ],
                                                    "id": 7890,
                                                    "name": "MemberAccess",
                                                    "src": "2057:25:7"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "proof",
                                                      "referencedDeclaration": 7791,
                                                      "type": "struct Verifier.Proof storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "solution",
                                                          "referencedDeclaration": 7798,
                                                          "type": "struct SolnSquareVerifier.Solution storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "type": "struct SolnSquareVerifier.UserSolution storage ref"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 7806,
                                                                  "type": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref",
                                                                  "value": "solutionsStorage"
                                                                },
                                                                "id": 7891,
                                                                "name": "Identifier",
                                                                "src": "2083:16:7"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 7866,
                                                                  "type": "uint256",
                                                                  "value": "i"
                                                                },
                                                                "id": 7892,
                                                                "name": "Identifier",
                                                                "src": "2100:1:7"
                                                              }
                                                            ],
                                                            "id": 7893,
                                                            "name": "IndexAccess",
                                                            "src": "2083:19:7"
                                                          }
                                                        ],
                                                        "id": 7894,
                                                        "name": "MemberAccess",
                                                        "src": "2083:28:7"
                                                      }
                                                    ],
                                                    "id": 7895,
                                                    "name": "MemberAccess",
                                                    "src": "2083:34:7"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "input",
                                                      "referencedDeclaration": 7795,
                                                      "type": "uint256[2] storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "solution",
                                                          "referencedDeclaration": 7798,
                                                          "type": "struct SolnSquareVerifier.Solution storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "type": "struct SolnSquareVerifier.UserSolution storage ref"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 7806,
                                                                  "type": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref",
                                                                  "value": "solutionsStorage"
                                                                },
                                                                "id": 7896,
                                                                "name": "Identifier",
                                                                "src": "2119:16:7"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 7866,
                                                                  "type": "uint256",
                                                                  "value": "i"
                                                                },
                                                                "id": 7897,
                                                                "name": "Identifier",
                                                                "src": "2136:1:7"
                                                              }
                                                            ],
                                                            "id": 7898,
                                                            "name": "IndexAccess",
                                                            "src": "2119:19:7"
                                                          }
                                                        ],
                                                        "id": 7899,
                                                        "name": "MemberAccess",
                                                        "src": "2119:28:7"
                                                      }
                                                    ],
                                                    "id": 7900,
                                                    "name": "MemberAccess",
                                                    "src": "2119:34:7"
                                                  }
                                                ],
                                                "id": 7901,
                                                "name": "FunctionCall",
                                                "src": "2057:97:7"
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "=",
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": true,
                                                              "type": "bool"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 7810,
                                                                  "type": "mapping(uint256 => bool)",
                                                                  "value": "usedSolns"
                                                                },
                                                                "id": 7902,
                                                                "name": "Identifier",
                                                                "src": "2183:9:7"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "member_name": "index",
                                                                  "referencedDeclaration": 7800,
                                                                  "type": "uint256"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "type": "struct SolnSquareVerifier.UserSolution storage ref"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 7806,
                                                                          "type": "struct SolnSquareVerifier.UserSolution storage ref[] storage ref",
                                                                          "value": "solutionsStorage"
                                                                        },
                                                                        "id": 7903,
                                                                        "name": "Identifier",
                                                                        "src": "2193:16:7"
                                                                      },
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 7866,
                                                                          "type": "uint256",
                                                                          "value": "i"
                                                                        },
                                                                        "id": 7904,
                                                                        "name": "Identifier",
                                                                        "src": "2210:1:7"
                                                                      }
                                                                    ],
                                                                    "id": 7905,
                                                                    "name": "IndexAccess",
                                                                    "src": "2193:19:7"
                                                                  }
                                                                ],
                                                                "id": 7906,
                                                                "name": "MemberAccess",
                                                                "src": "2193:25:7"
                                                              }
                                                            ],
                                                            "id": 7907,
                                                            "name": "IndexAccess",
                                                            "src": "2183:36:7"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "74727565",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "bool",
                                                              "type": "bool",
                                                              "value": "true"
                                                            },
                                                            "id": 7908,
                                                            "name": "Literal",
                                                            "src": "2222:4:7"
                                                          }
                                                        ],
                                                        "id": 7909,
                                                        "name": "Assignment",
                                                        "src": "2183:43:7"
                                                      }
                                                    ],
                                                    "id": 7910,
                                                    "name": "ExpressionStatement",
                                                    "src": "2183:43:7"
                                                  },
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "=",
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 7862,
                                                              "type": "bool",
                                                              "value": "foundValid"
                                                            },
                                                            "id": 7911,
                                                            "name": "Identifier",
                                                            "src": "2253:10:7"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "74727565",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "bool",
                                                              "type": "bool",
                                                              "value": "true"
                                                            },
                                                            "id": 7912,
                                                            "name": "Literal",
                                                            "src": "2266:4:7"
                                                          }
                                                        ],
                                                        "id": 7913,
                                                        "name": "Assignment",
                                                        "src": "2253:17:7"
                                                      }
                                                    ],
                                                    "id": 7914,
                                                    "name": "ExpressionStatement",
                                                    "src": "2253:17:7"
                                                  },
                                                  {
                                                    "id": 7915,
                                                    "name": "Break",
                                                    "src": "2297:5:7"
                                                  }
                                                ],
                                                "id": 7916,
                                                "name": "Block",
                                                "src": "2156:170:7"
                                              }
                                            ],
                                            "id": 7917,
                                            "name": "IfStatement",
                                            "src": "2054:272:7"
                                          }
                                        ],
                                        "id": 7918,
                                        "name": "Block",
                                        "src": "2031:314:7"
                                      }
                                    ],
                                    "id": 7919,
                                    "name": "IfStatement",
                                    "src": "1989:356:7"
                                  }
                                ],
                                "id": 7920,
                                "name": "Block",
                                "src": "1970:390:7"
                              }
                            ],
                            "id": 7921,
                            "name": "IfStatement",
                            "src": "1934:426:7"
                          }
                        ],
                        "id": 7922,
                        "name": "Block",
                        "src": "1919:452:7"
                      }
                    ],
                    "id": 7923,
                    "name": "ForStatement",
                    "src": "1869:502:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9b2b11ba5d436c7f91fc1cdc488814196adbae8747dc40162c9b57e8b9f4e7ad",
                                  "typeString": "literal_string \"The address has no send a valid solution\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8878,
                                8879
                              ],
                              "referencedDeclaration": 8879,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7924,
                            "name": "Identifier",
                            "src": "2381:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7862,
                              "type": "bool",
                              "value": "foundValid"
                            },
                            "id": 7925,
                            "name": "Identifier",
                            "src": "2389:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546865206164647265737320686173206e6f2073656e6420612076616c696420736f6c7574696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The address has no send a valid solution\"",
                              "value": "The address has no send a valid solution"
                            },
                            "id": 7926,
                            "name": "Literal",
                            "src": "2401:42:7"
                          }
                        ],
                        "id": 7927,
                        "name": "FunctionCall",
                        "src": "2381:63:7"
                      }
                    ],
                    "id": 7928,
                    "name": "ExpressionStatement",
                    "src": "2381:63:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1447,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8930,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7929,
                                "name": "Identifier",
                                "src": "2455:5:7"
                              }
                            ],
                            "id": 7931,
                            "name": "MemberAccess",
                            "src": "2455:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7856,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7932,
                            "name": "Identifier",
                            "src": "2466:2:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7858,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7933,
                            "name": "Identifier",
                            "src": "2470:7:7"
                          }
                        ],
                        "id": 7934,
                        "name": "FunctionCall",
                        "src": "2455:23:7"
                      }
                    ],
                    "id": 7935,
                    "name": "ExpressionStatement",
                    "src": "2455:23:7"
                  }
                ],
                "id": 7936,
                "name": "Block",
                "src": "1822:664:7"
              }
            ],
            "id": 7937,
            "name": "FunctionDefinition",
            "src": "1762:724:7"
          }
        ],
        "id": 7938,
        "name": "ContractDefinition",
        "src": "236:2253:7"
      }
    ],
    "id": 7939,
    "name": "SourceUnit",
    "src": "0:2549:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x77cd7d3cd964bb1589f38a348f5e30078d5b599630eb9731a9ce218840f8e552": {
          "anonymous": false,
          "inputs": [],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752": {
          "anonymous": false,
          "inputs": [],
          "name": "Paused",
          "type": "event"
        },
        "0xa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933": {
          "anonymous": false,
          "inputs": [],
          "name": "Unpaused",
          "type": "event"
        },
        "0x04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x32b254fF832987f48D2BE69Dda0D0CD4C8974eea",
      "transactionHash": "0x55055dfaa382d08dc11be26e3032a6754e0fa31f4eadb549d6fa4d8b8207f0f5"
    },
    "5777": {
      "events": {
        "0x77cd7d3cd964bb1589f38a348f5e30078d5b599630eb9731a9ce218840f8e552": {
          "anonymous": false,
          "inputs": [],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752": {
          "anonymous": false,
          "inputs": [],
          "name": "Paused",
          "type": "event"
        },
        "0xa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933": {
          "anonymous": false,
          "inputs": [],
          "name": "Unpaused",
          "type": "event"
        },
        "0x04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x65079449d627dab547FFe63E6759009B506a0ACA",
      "transactionHash": "0x49ab73b9794a9f4cb293d972f12e194d902c3712330bae79d9e1824fce1b4a88"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-05-18T03:37:35.989Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner\r",
        "params": {
          "operator": "operator address which you want to query the approval of\r",
          "owner": "owner address which you want to query the approval of\r"
        },
        "return": "bool whether the given operator is approved by the given owner\r"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator\r An operator is allowed to transfer all tokens of the sender on their behalf\r",
        "params": {
          "approved": "representing the status of the approval to be set\r",
          "to": "operator address to set the approval\r"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table\r"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract\r Reverts if the index is greater or equal to the total number of tokens\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list\r"
        },
        "return": "uint256 token ID at the given index of the tokens list\r"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list\r",
          "owner": "address owning the tokens list to be accessed\r"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address\r"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract\r",
        "return": "uint256 representing the total amount of tokens\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}